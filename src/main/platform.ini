[vs/platform/actions/browser/menuEntryActionViewItem]
titleAndKb = {0}（{1}）

[vs/platform/configuration/common/configurationRegistry]
config.property.duplicate = 未能注册“{0}”。此属性已注册。
config.property.languageDefault = 未能注册“{0}”。其符合描述特定语言编辑器设置的表达式“\\\\[.*\\\\]$”。请使用“configurationDefaults”。
defaultConfigurations.title = 默认配置替代
overrideSettings.defaultDescription = 针对某种语言，配置替代编辑器设置。
overrideSettings.description = 针对 {0} 语言，配置替代编辑器设置。

[vs/platform/dialogs/common/dialogs]
moreFile = …1 个其他文件未显示
moreFiles = …{0} 个其他文件未显示

[vs/platform/dialogs/electron-main/dialogs]
open = 打开
openFile = 打开文件
openFolder = 打开文件夹
openWorkspace = 打开(&&O)
openWorkspaceTitle = 打开工作区

[vs/platform/environment/node/argv]
add = 将文件夹添加到上一个活动窗口。
category = 使用 "--list-extension" 选项时，按提供的类别筛选已安装的扩展。
diff = 将两个文件相互比较。
disableExtension = 禁用一个扩展。
disableExtensions = 禁用所有已安装的扩展。
disableGPU = 禁用 GPU 硬件加速。
experimentalApis = 为扩展启用实验性 API 功能。可以输入一个或多个扩展的标识符来进行单独启用。
extensionHomePath = 设置扩展的根路径。
extensionsManagement = 扩展管理
fileUri = 使用给定的文件 URI 打开窗口
folderUri = 在新窗口中打开一个或多个给定 URI 的文件夹
goto = 打开路径下的文件并定位到特定行和特定列。
help = 打印使用情况。
inspect-brk-extensions = 允许扩展宿主在启动后暂停时进行扩展的调试和分析。您可以在开发人员工具中找到连接 URI。
inspect-extensions = 允许调试和分析扩展。您可以在开发人员工具中找到连接 URI。
installExtension = 安装或更新扩展。可使用 "--force" 开关去除提示。
listExtensions = 列出已安装的扩展。
locale = 要使用的区域设置，如 "en-US" 或 "zh-CN"。
log = 使用的日志级别。默认为 "info"。允许的值为 "critical"（关键）、"error"（错误）、"warn"（警告）、"info"（信息）、"debug"（调试）、"trace"（跟踪）和 "off"（关闭）。
maxMemory = 单个窗口最大内存大小，以 MB 为单位。
newWindow = 强制打开新窗口。
options = 选项
optionsUpperCase = 选项
paths = 路径
prof-startup = 启动期间运行 CPU 探查器
reuseWindow = 强制在已打开的窗口中打开文件或文件夹。
showVersions = 使用 "--list-extension" 选项时，显示已安装扩展的版本。
status = 打印进程使用情况和诊断信息。
stdinUnix = 要从输入流中读取，请追加 "-"，如 "ps aux | grep code | {0} -"。
stdinWindows = 要读取其他程序的输出，请追加 "-"，如 "echo Hello World | {0} -"。
telemetry = 显示 VS Code 收集的所有遥测事件。
troubleshooting = 故障排查
uninstallExtension = 卸载扩展。
unknownCommit = 未知提交
unknownVersion = 未知版本
usage = 使用情况
userDataDir = 指定存储用户数据的目录。可用于打开多个不同的 VS Code 实例。
verbose = 打印详细输出（蕴含 "--wait" 选项）。
version = 打印版本。
wait = 等文件关闭后再返回。

[vs/platform/environment/node/argvHelper]
gotoValidation = "--goto" 模式中的参数格式应为 "FILE(:LINE(:CHARACTER))"。
multipleValues = 多次提供的选项 "{0}"。已使用值 "{1}"。
unknownOption = 未知的选项 "{0}"。已忽略。

[vs/platform/extensionManagement/common/extensionManagement]
extensions = 扩展
preferences = 设置

[vs/platform/extensionManagement/node/extensionManagementService]
MarketPlaceDisabled = 市场被禁用
Not a Marketplace extension = 只能重新安装商店中的扩展
cannot read = 未能从 {0} 读取扩展
errorDeleting = 安装扩展“{1}”时未能删除现有文件夹“{0}”。请手动删除此文件夹，然后重试
exitCode = 未能安装扩展。请在重新启动 VS Code 后重新安装。
incompatible = 未能安装扩展“{0}”，因为它不兼容 VS Code 版本 {1}。
invalidManifest = 扩展无效：“package.json”不是 JSON 文件。
malicious extension = 未能安装此扩展，它被报告存在问题。
multipleDependentsError = 未能卸载扩展“{0}”。扩展“{1}”、“{2}”以及其他扩展都依赖于此。
notExists = 找不到扩展
notFoundCompatibleDependency = 未能安装扩展“{0}”，因为它不兼容 VS Code 版本 {1}。
notInstalled = 未安装扩展“{0}”。
quitCode = 安装扩展失败。请重新启动 VS Code 然后重试。
removeError = 删除扩展失败：{0}。请重新启动 VS Code 然后重试。
renameError = 将 {0} 重命名为 {1} 时出错。
restartCode = 请在重新安装扩展 {0} 之前重新启动 VS Code。
singleDependentError = 未能卸载扩展“{0}”：扩展“{1}”依赖于它。
twoDependentsError = 未能卸载扩展“{0}”：扩展“{1}”与“{2}”依赖于它。

[vs/platform/extensionManagement/node/extensionManagementUtil]
invalidManifest = VSIX 无效：“package.json”不是 JSON 文件。

[vs/platform/extensions/common/extensionValidator]
versionMismatch = 扩展与 VS Code {0} 不兼容：扩展需要 {1} 版本。
versionSpecificity1 = 扩展指定的 VS Code 版本 {0} 不够具体。对于 1.0.0 之前的 VS Code 版本，请至少指定主要和次要版本。
versionSpecificity2 = 扩展指定的 VS Code 版本 {0} 不够具体。对于 1.0.0 之后的 VS Code 版本，请至少指定主要版本。
versionSyntax = 未能解析扩展指定的 VS Code 版本 {0}。

[vs/platform/files/common/fileService]
deleteFailed = 未能删除非空的文件夹“{0}”。
err.read = 未能读取文件“{0}”。
err.readonly = 未能修改资源。
err.trash = 提供程序不支持移动到回收站。
err.write = 未能写入文件“{0}”。
fileExists = 已存在要创建的文件“{0}”。
fileIsDirectoryError = 预期的文件“{0}”实际上是一个目录。
fileModifiedError = 自以下时间已修改的文件：
fileNotFoundError = 找不到文件“{0}”。
fileNotModifiedError = 自以下时间未修改的文件：
fileTooLargeError = 文件太大，未能打开。
invalidPath = 资源“{0}”的路径应是绝对路径。
mkdirExistsError = “{0}”存在，但不是目录。
noProviderFound = 找不到“{0}”的文件系统提供程序。
unableToMoveCopyError1 = 当源路径与目标路径相同或为其父路径时，未能移动或拷贝。
unableToMoveCopyError2 = 未能移动或拷贝。文件已存在于目标位置。
unableToMoveCopyError3 = 未能移动或拷贝。文件不能替换其所在的文件夹。
unableToMoveCopyError4 = 未能移动或拷贝。文件不能替换其所在的文件夹。

[vs/platform/files/common/files]
unknownError = 未知错误

[vs/platform/files/common/io]
fileTooLargeError = 文件太大，未能打开。
fileTooLargeForHeapError = 要打开此大小的文件，您需要重新启动 VS Code 并允许使用更多内存。

[vs/platform/files/electron-browser/diskFileSystemProvider]
binFailed = 未能将“{0}”移动到回收站
trashFailed = 未能将“{0}”移动到废纸篓

[vs/platform/files/node/diskFileSystemProvider]
copyError = 未能将“{0}”拷贝到“{1}”（{2}）中。
fileCopyErrorExists = 目标处已存在文件。
fileCopyErrorPathCase = 目标处已存在仅文件名大小写不同的文件。
fileExists = 文件已存在
fileNotExists = 文件不存在
moveError = 未能将“{0}”移动到“{1}”（{2}）中。

[vs/platform/issue/electron-main/issueMainService]
cancel = 取消
confirmCloseIssueReporter = 您的输入将不会存储。是否关闭此窗口？
issueReporter = 报告问题
issueReporterWriteToClipboard = 数据太多，不能直接发送到 GitHub。是否要将数据存储到粘贴板？
local = 本地
ok = 确定
processExplorer = 进程管理器
yes = 关闭

[vs/platform/keybinding/common/abstractKeybindingService]
first.chord = 已按 {0}，请按第二个键…
missing.chord = 组合键 {0}，{1} 不是命令。

[vs/platform/label/common/label]
untitledWorkspace = 无标题（工作区）
workspaceName = {0}（工作区）

[vs/platform/list/browser/listService]
automatic keyboard navigation setting = 列表和树中的键盘导航仅通过键入自动触发。设置为 `false` 表示键盘导航只在执行 `list.toggleKeyboardNavigation` 命令时触发，您可以为该命令指定快捷键。
deprecated = 已弃用：请改用 `{0}`。
horizontalScrolling setting = 使列表和树可以水平滚动。
keyboardNavigationSettingKey = 列表和树的键盘导航样式。可为 `"simple"`、`"highlight"` 或 `"filter"`。
keyboardNavigationSettingKey.filter = 筛选器键盘导航将筛选出并隐藏与键盘输入不匹配的所有元素。
keyboardNavigationSettingKey.highlight = 高亮键盘导航会突出显示与键盘输入相匹配的元素。进一步向上和向下导航将仅遍历突出显示的元素。
keyboardNavigationSettingKey.simple = 简单键盘导航聚焦与键盘输入相匹配的元素。仅对前缀进行匹配。
multiSelectModifier = 在通过鼠标多选树和列表条目时使用的修改键（例如“资源”和“版本”面板）。“在侧边打开”功能所需的鼠标动作（若可用）将会相应调整，不与多选修改键冲突。
multiSelectModifier.alt = 映射为 Alt（Windows 和 Linux）或 Option（macOS）
multiSelectModifier.ctrlCmd = 映射为 Ctrl（Windows 和 Linux）或 Command（macOS）
openModeModifier = 在树和列表中怎样使用鼠标来展开子项（若支持）。对于树中的父节点，此设置将决定是使用点击还是双击来展开。某些不适用于此设置的树或列表可能会忽略此项。
render tree indent guides = 在树中显示缩进参考线。
tree horizontalScrolling setting = 使树可以水平滚动。
tree indent setting = 树的缩进，以像素为单位。
workbenchConfigurationTitle = 工作台

[vs/platform/markers/common/markers]
sev.error = 错误
sev.info = 信息
sev.warning = 警告

[vs/platform/menubar/electron-main/menubar]
mAbout = 关于 {0}
mBringToFront = 前置全部窗口
mDebug = 调试(&&D)
mEdit = 编辑(&&E)
mFile = 文件(&&F)
mGoto = 转到(&&G)
mHelp = 帮助(&&H)
mHide = 隐藏 {0}
mHideOthers = 隐藏其他
mMergeAllWindows = 合并所有窗口
mMinimize = 最小化
mMoveTabToNewWindow = 移动标签页到新窗口
mNewTab = 新建标签页
mSelection = 选择(&&S)
mServices = 服务
mShowAll = 全部显示
mShowNextTab = 显示下一个选项卡
mShowPreviousTab = 显示上一个选项卡
mTerminal = 终端(&&T)
mView = 查看(&&V)
mWindow = 窗口
mZoom = 缩放
miCheckForUpdates = 检查更新(&&U)…
miCheckingForUpdates = 正在检查更新…
miDownloadUpdate = 下载可用更新(&&O)
miDownloadingUpdate = 正在下载更新…
miInstallUpdate = 安装更新(&&U)…
miInstallingUpdate = 正在安装更新…
miNewWindow = 新建窗口(&&W)
miPreferences = 设置(&&P)
miQuit = 退出 {0}
miRestartToUpdate = 重新启动以更新(&&U)
miSwitchWindow = 切换窗口(&&W)…

[vs/platform/request/common/request]
httpConfigurationTitle = HTTP
proxy = 使用的代理设置。默认从 `http_proxy` 和 `https_proxy` 环境变量中获取。
proxyAuthorization = 要作为每个网络请求的 `Proxy-Authorization` 标头发送的值。
proxySupport = 对扩展使用代理支持。
proxySupportOff = 禁用对扩展的代理支持。
proxySupportOn = 为扩展启用代理支持。
proxySupportOverride = 为扩展启用代理支持，覆盖请求选项。
strictSSL = 是否根据提供的 CA 列表验证代理服务器证书。
systemCertificates = 是否应从操作系统加载 CA 证书。（在 Windows 和 macOS 上，关闭此窗口后需要重新加载窗口。）

[vs/platform/telemetry/common/telemetryService]
telemetry.enableTelemetry = 将使用数据和错误报告发送给 Microsoft。
telemetryConfigurationTitle = 遥测

[vs/platform/theme/common/colorRegistry]
activeContrastBorder = 在活动元素周围额外的一层边框，用来提高对比度从而区别其他元素。
activeLinkForeground = 活动链接的颜色。
badgeBackground = 徽标的背景色。
badgeForeground = 徽标的前景色。
breadcrumbsBackground = 面包屑项的背景色。
breadcrumbsFocusForeground = 焦点面包屑项的颜色。
breadcrumbsSelectedBackground = 面包屑项选择器的背景色。
breadcrumbsSelectedForegound = 已选面包屑项的颜色。
buttonBackground = 按钮的背景色。
buttonForeground = 按钮的前景色。
buttonHoverBackground = 按钮在悬停时的背景色。
checkbox.background = 复选框小部件的背景色。
checkbox.border = 复选框小部件的边框颜色。
checkbox.foreground = 复选框小部件的前景色。
contrastBorder = 在元素周围额外的一层边框，用来提高对比度从而区别其他元素。
descriptionForeground = 提供其他信息的说明文本的前景色，例如标签文本。
diffEditorBorder = 两个文本编辑器之间的边框颜色。
diffEditorInserted = 已插入的文本的背景色。颜色应透明。
diffEditorInsertedOutline = 插入的文本的轮廓颜色。
diffEditorRemoved = 已删除的文本的背景色。颜色应透明。
diffEditorRemovedOutline = 被删除文本的轮廓颜色。
dropdownBackground = 下拉列表的背景色。
dropdownBorder = 下拉列表的边框颜色。
dropdownForeground = 下拉列表前景色。
dropdownListBackground = 下拉列表的背景色。
editorBackground = 编辑器的背景色。
editorError.foreground = 错误波浪线的颜色。
editorFindMatch = 当前搜索匹配项的颜色。
editorFindMatchBorder = 当前搜索匹配项的边框颜色。
editorForeground = 编辑器默认的前景色。
editorHint.foreground = 提示波浪线的颜色。
editorInactiveSelection = 非活动编辑器中所选内容的颜色。颜色应透明。
editorInfo.foreground = 信息波浪线的颜色。
editorLightBulbAutoFixForeground = 自动修复灯泡图标的颜色。
editorLightBulbForeground = 灯泡图标的颜色。
editorSelectionBackground = 编辑器所选内容的颜色。
editorSelectionForeground = 用以彰显高对比度的所选内容的颜色。
editorSelectionHighlight = 具有与所选项相关内容的区域的颜色。颜色应透明。
editorSelectionHighlightBorder = 与所选项内容相同的区域的边框颜色。
editorWarning.foreground = 警告波浪线的颜色。
editorWidgetBackground = 编辑器组件的背景色。
editorWidgetBorder = 编辑器小组件的边框颜色。此颜色仅在小组件有边框且不被小组件重写时适用。
editorWidgetForeground = 编辑器小组件的前景色。
editorWidgetResizeBorder = 编辑器小组件大小调整条的边框颜色。此颜色仅在小组件有调整边框且不被小组件颜色覆盖时使用。
errorBorder = 错误框的边框颜色。
errorForeground = 错误信息的前景色。此颜色仅在不被组件覆盖时适用。
findMatchHighlight = 其他搜索匹配项的颜色。颜色应透明。
findMatchHighlightBorder = 其他搜索匹配项的边框颜色。
findRangeHighlight = 限制搜索范围的颜色。颜色应透明。
findRangeHighlightBorder = 限制搜索的范围的边框颜色。颜色应透明。
focusBorder = 焦点元素的整体边框颜色。此颜色仅在不被其他组件覆盖时适用。
foreground = 整体前景色。此颜色仅在不被组件覆盖时适用。
highlight = 在列表或树中搜索时，其中匹配内容的高亮颜色。
hintBorder = 提示框的边框颜色。
hoverBackground = 编辑器悬停提示的背景色。
hoverBorder = 光标悬停时编辑器的边框颜色。
hoverForeground = 编辑器悬停的前景色。
hoverHighlight = 在下面突出显示悬停的字词。颜色应透明。
iconForeground = 工作台中图标的默认颜色。
infoBorder = 信息框的边框颜色。
inputBoxActiveOptionBorder = 输入字段中已激活选项的边框颜色。
inputBoxBackground = 输入框的背景色。
inputBoxBorder = 输入框的边框颜色。
inputBoxForeground = 输入框的前景色。
inputOption.activeBackground = 输入字段中激活选项的背景色。
inputPlaceholderForeground = 输入框中占位符的前景色。
inputValidationErrorBackground = 输入验证结果为错误级别时的背景色。
inputValidationErrorBorder = 严重性为错误时输入验证的边框颜色。
inputValidationErrorForeground = 输入验证结果为错误级别时的前景色。
inputValidationInfoBackground = 输入验证结果为信息级别时的背景色。
inputValidationInfoBorder = 严重性为信息时输入验证的边框颜色。
inputValidationInfoForeground = 输入验证结果为信息级别时的前景色。
inputValidationWarningBackground = 严重性为警告时输入验证的背景色。
inputValidationWarningBorder = 严重性为警告时输入验证的边框颜色。
inputValidationWarningForeground = 输入验证结果为警告级别时的前景色。
invalidItemForeground = 列表或树中无效项的前景色，例如“资源”面板中没有解析的根目录。
listActiveSelectionBackground = 已选项在列表或树活动时的背景色。
listActiveSelectionForeground = 已选项在列表或树活动时的前景色。
listDropBackground = 使用鼠标移动项目时，列表或树进行拖放的背景色。
listErrorForeground = 包含错误的列表项的前景色。
listFilterMatchHighlight = 筛选后的匹配项的背景色。
listFilterMatchHighlightBorder = 筛选后的匹配项的边框颜色。
listFilterWidgetBackground = 列表和树中类型筛选器小组件的背景色。
listFilterWidgetNoMatchesOutline = 当没有匹配项时，列表和树中类型筛选器小组件的轮廓颜色。
listFilterWidgetOutline = 列表和树中类型筛选器小组件的轮廓颜色。
listFocusBackground = 焦点项在列表或树活动时的背景色。
listFocusForeground = 焦点项在列表或树活动时的背景色。
listHoverBackground = 使用鼠标移动项目时，列表或树的背景色。
listHoverForeground = 鼠标在项目上悬停时，列表或树的前景色。
listInactiveFocusBackground = 非活动的列表或树控件中焦点项的背景色。
listInactiveSelectionBackground = 已选项在列表或树非活动时的背景色。
listInactiveSelectionForeground = 已选项在列表或树非活动时的前景色。
listWarningForeground = 包含警告的列表项的前景色。
menuBackground = 菜单项的背景色。
menuBorder = 菜单的边框颜色。
menuForeground = 菜单项的前景色。
menuSelectionBackground = 菜单中所选菜单项的背景色。
menuSelectionBorder = 菜单中所选菜单项的边框颜色。
menuSelectionForeground = 菜单中选定菜单项的前景色。
menuSeparatorBackground = 菜单中分隔线的颜色。
mergeBorder = 内联合并冲突中标头和分割线的边框颜色。
mergeCommonContentBackground = 内联合并冲突中的常见祖先内容的背景色。颜色应透明。
mergeCommonHeaderBackground = 内联合并冲突中的常见祖先标头的背景色。颜色应透明。
mergeCurrentContentBackground = 内联合并冲突中的当前内容的背景色。颜色应透明。
mergeCurrentHeaderBackground = 当前标题的内联合并冲突的背景色。颜色应透明。
mergeIncomingContentBackground = 内联合并冲突中的传入内容的背景色。颜色应透明。
mergeIncomingHeaderBackground = 内联合并冲突中的传入标题的背景色。颜色应透明。
minimapError = 小地图中错误标记的颜色。
minimapFindMatchHighlight = 小地图中查找匹配项的颜色。
minimapSelectionHighlight = 编辑器选区在小地图中对应的标记颜色。
overviewRuleWarning = 小地图中警告标记的颜色。
overviewRulerCommonContentForeground = 内联合并冲突中共同祖先区域的概览标尺的前景色。
overviewRulerCurrentContentForeground = 内联合并冲突中当前版本区域的概览标尺的前景色。
overviewRulerFindMatchForeground = 用于查找匹配项的概述标尺标记的颜色。颜色应透明。
overviewRulerIncomingContentForeground = 内联合并冲突中传入的版本区域的概览标尺的前景色。
overviewRulerSelectionHighlightForeground = 用于突出显示所选内容的概述标尺标记的颜色。颜色应透明。
pickerGroupBorder = 快速选取器分组边框颜色。
pickerGroupForeground = 快速选取器分组标签的颜色。
problemsErrorIconForeground = 问题错误图标的颜色。
problemsInfoIconForeground = 问题信息图标的颜色。
problemsWarningIconForeground = 问题警告图标的颜色。
progressBarBackground = 表示长时间操作的进度条的背景色。
scrollbarShadow = 表示视图被滚动的滚动条阴影颜色。
scrollbarSliderActiveBackground = 滚动条滑块在被点击时的背景色。
scrollbarSliderBackground = 滚动条滑块的背景色。
scrollbarSliderHoverBackground = 滚动条滑块在悬停时的背景色。
searchEditor.editorFindMatchBorder = 搜索编辑器查询匹配的边框颜色。
searchEditor.queryMatch = 搜索编辑器查询匹配的颜色。
selectionBackground = 工作台所选内容的背景色（例如输入字段或文本区域）。本设置不适用于编辑器。
snippetFinalTabstopHighlightBackground = 代码片段中最后的占位符的高亮背景色。
snippetFinalTabstopHighlightBorder = 代码片段中最后的占位符的高亮边框颜色。
snippetTabstopHighlightBackground = 代码片段占位符的高亮背景色。
snippetTabstopHighlightBorder = 代码片段占位符的高亮边框颜色。
statusBarBackground = 编辑器悬停状态栏的背景色。
textBlockQuoteBackground = 文本中块引用的背景色。
textBlockQuoteBorder = 文本中块引用的边框颜色。
textCodeBlockBackground = 文本中代码块的背景色。
textLinkActiveForeground = 文本中链接在点击或鼠标悬停时的前景色。
textLinkForeground = 文本中链接的前景色。
textPreformatForeground = 预格式化文本段的前景色。
textSeparatorForeground = 文字分隔符的颜色。
treeIndentGuidesStroke = 树的缩进参考线的颜色。
warningBorder = 警告框的边框颜色。
widgetShadow = 编辑器小组件的阴影颜色。

[vs/platform/theme/common/tokenClassificationRegistry]
abstract = 抽象符号的样式。
async = 异步符号的样式。
class = 类的样式。
comment = 注释的样式。
constant = 常量的样式。
declaration = 一般声明的样式。
deprecated = 弃用符号的样式。
documentation = 文档中引用的样式。
enum = 枚举的样式。
function = 函数的样式
interface = 接口的样式。
keyword = 关键字的样式。
labels = 文本的样式
macro = 宏的样式。
member = 成员（函数、字段、类型）的样式。
modification = 写入访问的样式。
namespace = 命名空间的样式。
number = 数字的样式。
operator = 运算符的样式。
parameter = 参数的样式。
parameterType = 类型参数的样式。
propertie = 属性的样式。
regexp = 表达式的样式。
schema.fontStyle.error = 字体样式必须为 `"italics"`、`"bold"` 或 `"underline"`。将样式设置为 `"-italics"`、`"-bold"` 或 `"-underline"` 以取消设置。空字符串取消设置所有样式。
schema.token.background.warning = 暂不支持标记的背景色。
schema.token.fontStyle = 标记的字体样式。可选值为 `"italics"`、`"bold"` 或 `"underline"`，`"-italics"`、`"-bold"` 或 `"-underline"` 或其组合。空字符串取消设置继承的设置。
schema.token.fontStyle.none = 无（清除继承的设置）。
schema.token.foreground = 标记的前景色。
schema.token.settings = 标记的颜色和样式。
static = 静态符号的样式。
string = 字符串的样式。
struct = 结构的样式。
type = 类型的样式。
variable = 变量的样式。

[vs/platform/update/common/update.config.contribution]
default = 启用自动更新检查。代码将定期自动检查更新。
deprecated = 此设置已弃用，请改用“{0}”。
enableWindowsBackgroundUpdates = 启用 Windows 后台更新。更新将从微软在线服务中获取。
enableWindowsBackgroundUpdatesTitle = 启用 Windows 后台更新
manual = 禁用自动后台更新检查。如果手动检查更新，更新将可用。
none = 禁用更新。
showReleaseNotes = 在更新后显示发行说明。发行说明将从微软在线服务中获取。
start = 仅在启动时检查更新。禁用自动后台更新检查。
updateConfigurationTitle = 更新
updateMode = 配置是否接收自动更新。需要重新启动。更新是从微软在线服务获取的。

[vs/platform/userDataSync/common/extensionsSync]
skip extension = 正在跳过同步扩展 {0}

[vs/platform/userDataSync/common/keybindingsSync]
errorInvalidKeybindings = 未能同步快捷键。请解决快捷键文件中的错误和警告，然后重试。

[vs/platform/userDataSync/common/settingsSync]
errorInvalidSettings = 未能同步设置。请解决设置文件中的错误和警告，然后重试。

[vs/platform/userDataSync/common/userDataSync]
sync = 同步
sync.enable = 启用同步。
sync.enableExtensions = 启用同步扩展。
sync.enableKeybindings = 启用同步快捷键。
sync.enableSettings = 启用同步设置。
sync.ignoredExtensions = 在同步时要忽略的扩展。
sync.ignoredSettings = 在同步时要忽略的设置。\n默认忽略的设置：\n\n{0}
sync.keybindingsPerPlatform = 同步快捷键时区分不同平台。

[vs/platform/windows/electron-main/windowsMainService]
ok = 确定
pathNotExistDetail = 磁盘上不存在路径“{0}”。
pathNotExistTitle = 路径不存在
uriInvalidDetail = URI“{0}”无效，无法打开。
uriInvalidTitle = 无法打开 URI

[vs/platform/workspaces/common/workspaces]
codeWorkspace = Code 工作区

[vs/platform/workspaces/electron-main/workspacesHistoryMainService]
folderDesc = {0} {1}
newWindow = 新建窗口
newWindowDesc = 新建窗口
recentFolders = 最近使用的工作区
workspaceDesc = {0} {1}

[vs/platform/workspaces/electron-main/workspacesMainService]
ok = 确定
workspaceOpenedDetail = 已在另一个窗口打开工作区。请先关闭该窗口，然后重试。
workspaceOpenedMessage = 无法存储工作区“{0}”
