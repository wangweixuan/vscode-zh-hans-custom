[vs/workbench/browser/actions/developerActions]
developer = 开发者
inspect context keys = 检查上下文键值
logStorage = 日志存储数据库内容
logWorkingCopies = 日志副本
screencastMode.location.verticalPosition = 投屏模式叠加的垂直偏移，从底部作为工作台高度的百分比。
screencastMode.onlyKeyboardShortcuts = 仅在投屏模式下显示键盘快捷键。
screencastModeConfigurationTitle = 投屏模式
toggle screencast mode = 打开或关闭投屏模式

[vs/workbench/browser/actions/helpActions]
help = 帮助
keybindingsReference = 快捷键参考
miDocumentation = 文档(&&D)
miIntroductoryVideos = 介绍性视频(&&V)
miKeyboardShortcuts = 快捷键参考(&&K)
miLicense = 查看许可证(&&V)
miPrivacyStatement = 隐私声明(&&Y)
miTipsAndTricks = 提示和技巧(&&C)
miTwitter = 查看官方 Twitter 账户(&&J)
miUserVoice = 搜索功能请求(&&S)
newsletterSignup = 订阅 VS Code 资讯邮件
openDocumentationUrl = 文档
openIntroductoryVideosUrl = 入门视频
openLicenseUrl = 查看许可证
openPrivacyStatement = 隐私声明
openTipsAndTricksUrl = 提示与技巧
openTwitterUrl = 查看官方 Twitter 账户
openUserVoiceUrl = 搜索功能请求

[vs/workbench/browser/actions/layoutActions]
closeSidebar = 关闭侧边栏
decreaseViewSize = 减小当前视图大小
flipLayout = 切换垂直或水平编辑器布局
increaseViewSize = 增加当前视图大小
miAppearance = 外观(&&A)
miMoveSidebarLeft = 使侧边栏靠左(&&M)
miMoveSidebarRight = 使侧边栏靠右(&&M)
miShowActivityBar = 显示活动栏(&&A)
miShowEditorArea = 显示编辑区域
miShowMenuBar = 显示菜单栏(&&B)
miShowSidebar = 显示侧边栏(&&S)
miShowStatusbar = 显示状态栏(&&T)
miToggleCenteredLayout = 切换居中布局
miToggleEditorLayout = 翻转布局(&&L)
miToggleZenMode = 切换禅模式
moveFocusedView = 移动当前视图
moveFocusedView.error.noFocusedView = 没有聚焦到任何视图。
moveFocusedView.error.nonMovableView = 当前视图不可移动。
moveFocusedView.newContainerInPanel = 面板栏中的新容器
moveFocusedView.newContainerInSidebar = 新侧边栏面板
moveFocusedView.selectDestination = 选择视图的目标
moveFocusedView.selectView = 选择要移动的视图
moveFocusedView.title = 视图：移动 {0}
moveSidebarLeft = 使侧边栏靠左
moveSidebarRight = 使侧边栏靠右
moveView = 移动视图
panel = 面板栏
panelContainer = 面板 {0}
resetFocusedView.error.noFocusedView = 没有选中的视图。
resetFocusedViewLocation = 重置当前视图的位置
resetViewLocations = 重置视图位置
sidebar = 侧边栏
sidebarContainer = 侧边栏 {0}
toggleActivityBar = 显示或隐藏活动栏
toggleCenteredLayout = 切换居中布局
toggleEditor = 显示或隐藏编辑器区域
toggleMenuBar = 显示或隐藏菜单栏
toggleSidebar = 显示或隐藏侧边栏
toggleSidebarPosition = 使侧边栏靠左或靠右
toggleStatusbar = 显示或隐藏状态栏
toggleTabs = 显示或隐藏标签栏
toggleZenMode = 打开或关闭禅模式
view = 视图

[vs/workbench/browser/actions/navigationActions]
focusNextPart = 聚焦到下一部分
focusPreviousPart = 聚焦到上一部分
navigateDown = 导航到下方视图
navigateLeft = 导航到左侧视图
navigateRight = 导航到右侧视图
navigateUp = 导航到上方视图
view = 视图

[vs/workbench/browser/actions/quickAccessActions]
quickNavigateNext = 在“快速打开”中导航到下一个
quickNavigatePrevious = 在“快速打开”中导航到上一个
quickOpen = 转到文件…
quickSelectNext = 在“快速打开”中选择“下一步”
quickSelectPrevious = 在“快速打开”中选择“上一步”

[vs/workbench/browser/actions/textInputActions]
copy = 拷贝
cut = 剪切
paste = 粘贴
redo = 重做
selectAll = 全选
undo = 撤销

[vs/workbench/browser/actions/windowActions]
about = 关于
developer = 开发者
file = 文件
files = 文件
help = 帮助
miAbout = 关于(&&A)
miMore = 更多(&&M)…
miNewWindow = 新建窗口(&&W)
miOpenRecent = 打开最近的文件(&&R)
miToggleFullScreen = 切换全屏(&&F)
newWindow = 新建窗口
openRecent = 打开最近的文件…
openRecentPlaceHolder = 选择并打开（按住 Ctrl 键在新窗口中打开）
openRecentPlaceHolderMac = 选择并打开（按住 Command 键在新窗口中打开）
quickOpenRecent = 快速打开最近的文件…
reloadWindow = 重新加载窗口
remove = 从最近打开中删除
toggleFullScreen = 切换全屏
view = 视图
workspaces = 工作区

[vs/workbench/browser/actions/workspaceActions]
closeWorkspace = 关闭工作区
duplicateWorkspaceInNewWindow = 在新窗口中复制工作区
globalRemoveFolderFromWorkspace = 将文件夹从工作区移除…
miAddFolderToWorkspace = 将文件夹添加到工作区(&&D)…
miCloseFolder = 关闭文件夹(&&F)
miCloseWorkspace = 关闭工作区(&&W)
miSaveWorkspaceAs = 将工作区存储为…
noWorkspaceOpened = 没有打开工作区。
openFile = 打开文件…
openFileFolder = 打开…
openFolder = 打开文件夹…
openWorkspaceAction = 打开工作区…
openWorkspaceConfigFile = 打开工作区配置文件
saveWorkspaceAsAction = 将工作区存储为…
workspaces = 工作区

[vs/workbench/browser/actions/workspaceCommands]
add = 添加(&&A)
addFolderToWorkspace = 将文件夹添加到工作区…
addFolderToWorkspaceTitle = 将文件夹添加到工作区
workspaceFolderPickerPlaceholder = 选择工作区文件夹

[vs/workbench/browser/parts/activitybar/activitybarActions]
nextSideBarView = 下一个侧边栏面板
previousSideBarView = 上一个侧边栏面板
view = 视图

[vs/workbench/browser/parts/activitybar/activitybarPart]
accounts = 帐户
hideActivitBar = 隐藏活动栏
hideHomeBar = 隐藏主页按钮
hideMenu = 隐藏菜单
home = 主页
homeIndicator = 主页
manage = 管理
resetLocation = 重置位置
showHomeBar = 显示主页按钮
showMenu = 显示菜单

[vs/workbench/browser/parts/compositeBar]
activityBarAriaLabel = 选择活动视图

[vs/workbench/browser/parts/compositeBarActions]
additionalViews = 其他视图
badgeTitle = {0} — {1}
compositeActive = {0}，活动
hide = 隐藏
keep = 保留
manageExtension = 管理扩展
numberBadge = {0}（{1}）
titleKeybinding = {0}（{1}）
toggle = 将视图固定或取消固定

[vs/workbench/browser/parts/compositePart]
ariaCompositeToolbarLabel = {0}操作
titleTooltip = {0}（{1}）

[vs/workbench/browser/parts/editor/binaryDiffEditor]
metadataDiff = {0} ⟷ {1}

[vs/workbench/browser/parts/editor/binaryEditor]
binaryEditor = 二进制编辑器
nativeBinaryError = 此文件是二进制文件或使用了不支持的文本编码，未能在编辑器中显示。
nativeFileTooLargeError = 文件太大，未能在编辑器中显示（{0}）
openAsText = 是否仍要打开？
sizeB = {0} B
sizeGB = {0} GB
sizeKB = {0} KB
sizeMB = {0} MB
sizeTB = {0} TB

[vs/workbench/browser/parts/editor/breadcrumbs]
enabled = 启用面包屑。
filepath = 是否在面包屑中显示文件路径。
filepath.last = 仅显示文件名。
filepath.off = 不显示文件路径。
filepath.on = 显示相对于工作区根目录的文件路径。
filteredTypes.array = 显示数组。
filteredTypes.boolean = 显示布尔。
filteredTypes.class = 显示类。
filteredTypes.constant = 显示常量。
filteredTypes.constructor = 显示构造函数。
filteredTypes.enum = 显示枚举。
filteredTypes.enumMember = 显示枚举成员。
filteredTypes.event = 显示事件。
filteredTypes.field = 显示字段。
filteredTypes.file = 显示文件。
filteredTypes.function = 显示函数。
filteredTypes.interface = 显示接口。
filteredTypes.key = 显示键。
filteredTypes.method = 显示方法。
filteredTypes.module = 显示模块。
filteredTypes.namespace = 显示命名空间。
filteredTypes.null = 显示 null。
filteredTypes.number = 显示数字。
filteredTypes.object = 显示对象。
filteredTypes.operator = 显示运算符。
filteredTypes.package = 显示包。
filteredTypes.property = 显示属性。
filteredTypes.string = 显示字符串。
filteredTypes.struct = 显示结构。
filteredTypes.typeParameter = 显示类型参数。
filteredTypes.variable = 显示变量。
icons = 在面包屑的项中显示图标。
symbolSortOrder = 如何在面包屑中排列文件内同一层级的符号。
symbolSortOrder.name = 按字母顺序排列。
symbolSortOrder.position = 按文件中的出现位置排列。
symbolSortOrder.type = 按符号类型排列。
symbolpath = 是否在面包屑中显示文件内的符号层级。
symbolpath.last = 仅显示当前符号。
symbolpath.off = 不显示符号。
symbolpath.on = 显示所有层级的符号。
title = 面包屑

[vs/workbench/browser/parts/editor/breadcrumbsControl]
cmd.category = 视图
cmd.focus = 聚焦到面包屑
cmd.toggle = 显示或隐藏面包屑
miShowBreadcrumbs = 显示面包屑(&&B)

[vs/workbench/browser/parts/editor/breadcrumbsPicker]
breadcrumbs = 面包屑导航

[vs/workbench/browser/parts/editor/editor]
pinned = {0}，已固定
preview = {0}，预览

[vs/workbench/browser/parts/editor/editor.contribution]
allEditorsPicker = 显示所有已打开的编辑器
allEditorsPickerByMostRecentlyUsed = 按使用时间显示所有打开的编辑器
binaryDiffEditor = 二重差异编辑器
close = 关闭编辑器
closeAll = 关闭全部编辑器
closeAllSaved = 关闭已存储的编辑器
closeEditorsInGroup = 关闭组中全部编辑器
closeOtherEditors = 关闭同组编辑器
closeOthers = 关闭其他编辑器
closeRight = 关闭右侧编辑器
closeRightEditors = 关闭组中右侧编辑器
closeSavedEditors = 关闭组中已存储的编辑器
file = 文件
groupOnePicker = 显示活动组中的编辑器
ignoreTrimWhitespace.label = 忽略可删除的空白字符
keepEditor = 保留编辑器
keepOpen = 保持打开状态
miBack = 返回(&&B)
miClearRecentOpen = 清除最近打开记录(&&C)
miEditorLayout = 编辑器布局(&&L)
miFocusAboveGroup = 上方组(&&A)
miFocusBelowGroup = 下方组(&&B)
miFocusFifthGroup = 第 5 组(&&5)
miFocusFirstGroup = 第 1 组(&&1)
miFocusFourthGroup = 第 4 组(&&4)
miFocusLeftGroup = 左侧组(&&L)
miFocusRightGroup = 右侧组(&&R)
miFocusSecondGroup = 第 2 组(&&2)
miFocusThirdGroup = 第 3 组(&&3)
miForward = 前进(&&F)
miLastEditLocation = 上次编辑位置(&&L)
miNextEditor = 下一个编辑器(&&N)
miNextEditorInGroup = 组中下一个使用过的编辑器(&&N)
miNextGroup = 下一个组(&&N)
miNextRecentlyUsedEditor = 之后使用过的编辑器(&&N)
miNextUsedEditorInGroup = 组中之后使用过的编辑器(&&N)
miPreviousEditor = 上一个编辑器(&&P)
miPreviousEditorInGroup = 组中上一个使用过的编辑器(&&P)
miPreviousGroup = 上一个组(&&P)
miPreviousRecentlyUsedEditor = 之前使用过的编辑器
miPreviousUsedEditorInGroup = 组中之前使用过的编辑器(&&P)
miReopenClosedEditor = 重新打开已关闭的编辑器(&&R)
miSingleColumnEditorLayout = 单一(&&S)
miSplitEditorDown = 向下拆分(&&D)
miSplitEditorLeft = 向左拆分(&&L)
miSplitEditorRight = 向右拆分(&&R)
miSplitEditorUp = 向上拆分(&&U)
miSwitchEditor = 切换编辑器(&&E)
miSwitchGroup = 切换组(&&G)
miThreeColumnsEditorLayout = 三列(&&H)
miThreeRowsEditorLayout = 三行(&&R)
miTwoByTwoGridEditorLayout = 田字形(&&G)
miTwoColumnsBottomEditorLayout = 底部双列(&&C)
miTwoColumnsEditorLayout = 双列(&&T)
miTwoRowsEditorLayout = 双行(&&W)
miTwoRowsRightEditorLayout = 右侧双行(&&O)
navigate.next.label = 下一个更改
navigate.prev.label = 上一个更改
showOpenedEditors = 显示打开的编辑器
showTrimWhitespace.label = 显示删除的空白字符
sideBySideEditor = 并排编辑器
splitDown = 向下拆分
splitEditorDown = 向下拆分编辑器
splitEditorRight = 向右拆分编辑器
splitLeft = 向左拆分
splitRight = 向右拆分
splitUp = 向上拆分
textDiffEditor = 文本差异编辑器
textEditor = 文本编辑器
toggleInlineView = 使用行内视图或并排视图
view = 视图

[vs/workbench/browser/parts/editor/editorActions]
clearEditorHistory = 清除编辑器历史记录
clearRecentFiles = 清除最近打开
closeAllEditors = 关闭所有编辑器
closeAllGroups = 关闭所有编辑器组
closeEditor = 关闭编辑器
closeEditorInAllGroups = 在所有组中关闭此编辑器
closeEditorsInOtherGroups = 关闭其他组中的编辑器
closeEditorsToTheLeft = 关闭组中左侧编辑器
closeOneEditor = 关闭
editorLayoutSingle = 单一编辑器布局
editorLayoutThreeColumns = 三列编辑器布局
editorLayoutThreeRows = 三行编辑器布局
editorLayoutTwoByTwoGrid = 田字形编辑器布局
editorLayoutTwoColumns = 双列编辑器布局
editorLayoutTwoColumnsBottom = 底部双列编辑器布局
editorLayoutTwoRows = 双行编辑器布局
editorLayoutTwoRowsRight = 右侧双行编辑器布局
evenEditorGroups = 重置编辑器组大小
firstEditorInGroup = 打开组中的第一个编辑器
focusAboveGroup = 聚焦到上方编辑器组
focusActiveEditorGroup = 聚焦到活动编辑器组
focusBelowGroup = 聚焦到下方编辑器组
focusFirstEditorGroup = 聚焦到第一个编辑器组
focusLastEditorGroup = 聚焦到最终组编辑器
focusLeftGroup = 聚焦到左侧编辑器组
focusNextGroup = 聚焦到下一组编辑器
focusPreviousGroup = 聚焦到上一组编辑器
focusRightGroup = 聚焦到右侧编辑器组
joinAllGroups = 合并所有编辑器组
joinTwoGroups = 将编辑器组与下一组合并
lastEditorInGroup = 打开组中上一个编辑器
maximizeEditor = 最大化编辑器组并隐藏侧边栏
minimizeOtherEditorGroups = 最大化编辑器组
moveActiveGroupDown = 向下移动编辑器组
moveActiveGroupLeft = 向左移动编辑器组
moveActiveGroupRight = 向右移动编辑器组
moveActiveGroupUp = 向上移动编辑器组
moveEditorLeft = 向左移动编辑器
moveEditorRight = 向右移动编辑器
moveEditorToAboveGroup = 将编辑器移动到上方组
moveEditorToBelowGroup = 将编辑器移动到下方组
moveEditorToFirstGroup = 将编辑器移动到第一组
moveEditorToLastGroup = 将编辑器移动到最后一组
moveEditorToLeftGroup = 将编辑器移动到左侧组
moveEditorToNextGroup = 将编辑器移动到下一组
moveEditorToPreviousGroup = 将编辑器移动到上一组
moveEditorToRightGroup = 将编辑器移动到右侧组
navigateEditorGroups = 在编辑器组间进行导航
navigateEditorHistoryByInput = 从历史记录里打开上一个编辑器
navigateLast = 转到最后
navigateNext = 前进
navigatePrevious = 后退
navigateToLastEditLocation = 转到上一编辑位置
newEditorAbove = 在上方新建编辑器组
newEditorBelow = 在下方新建编辑器组
newEditorLeft = 在左侧新建编辑器组
newEditorRight = 在右侧新建编辑器组
nextEditorInGroup = 打开组中的下一个编辑器
openNextEditor = 打开下一个编辑器
openNextRecentlyUsedEditor = 打开下一个最近使用的编辑器
openNextRecentlyUsedEditorInGroup = 打开组中下一个最近使用的编辑器
openPreviousEditor = 打开上一个编辑器
openPreviousEditorInGroup = 打开组中上一个编辑器
openPreviousRecentlyUsedEditor = 打开上一个最近使用的编辑器
openPreviousRecentlyUsedEditorInGroup = 打开组中上一个最近使用的编辑器
quickOpenLeastRecentlyUsedEditor = 快速打开最近使用频率最低的编辑器
quickOpenLeastRecentlyUsedEditorInGroup = 快速打开组中最近使用频率最低的编辑器
quickOpenPreviousRecentlyUsedEditor = 快速打开上一个最近使用过的编辑器
quickOpenPreviousRecentlyUsedEditorInGroup = 快速打开组中上一个最近使用过的编辑器
reopenClosedEditor = 重新打开已关闭的编辑器
revertAndCloseActiveEditor = 还原并关闭编辑器
showAllEditors = 显示所有编辑器
showAllEditorsByMostRecentlyUsed = 按使用时间显示所有编辑器
showEditorsInActiveGroup = 显示活动组中的编辑器
splitEditor = 拆分编辑器
splitEditorGroupDown = 向下拆分编辑器
splitEditorGroupLeft = 向左拆分编辑器
splitEditorGroupRight = 向右拆分编辑器
splitEditorGroupUp = 向上拆分编辑器
splitEditorOrthogonal = 田字形拆分编辑器
toggleEditorWidths = 切换编辑器组大小

[vs/workbench/browser/parts/editor/editorCommands]
compare = 比较
editorCommand.activeEditorMove.arg.description = 参数属性：\n	* `to` 表示向何处移动的字符串值。\n	* `by` 表示移动单位的字符串值（按选项卡或按组）。\n	* `value` 表示移动的位置数量或移动到的绝对位置的数字型值。
editorCommand.activeEditorMove.arg.name = 活动编辑器移动参数
editorCommand.activeEditorMove.description = 按标签或按组移动活动编辑器
toggleInlineView = 切换内联视图

[vs/workbench/browser/parts/editor/editorGroupView]
araLabelGroupActions = 编辑器组操作
cancel = 取消
closeGroupAction = 关闭
editorOpenError = 未能打开“{0}”：{1}。
editorOpenErrorDialog = 未能打开“{0}”
emptyEditorGroup = {0}（空）
groupAriaLabel = 编辑器组{0}
groupLabel = 第 {0} 组
ok = 确定

[vs/workbench/browser/parts/editor/editorStatus]
autoDetect = 自动检测
changeEncoding = 更改文件编码
changeEndOfLine = 更改换行符
changeMode = 更改语言模式
columnSelectionModeEnabled = 列选择已启用
configureAssociationsExt = “{0}”的配置文件关联…
configureModeSettings = 配置“{0}”语言基础设置…
currentAssociation = 当前关联
currentProblem = 当前问题
disableColumnSelectionMode = 禁用列选择模式
disableTabMode = 禁用辅助功能模式
endOfLineCarriageReturnLineFeed = CRLF
endOfLineLineFeed = LF
fileInfo = 文件信息
gotoLine = 转到行
guessedEncoding = 通过内容猜测
indentConvert = 转换文件
indentView = 更改视图
languageDescription = （{0}）— 配置的语言
languageDescriptionConfigured = （{0}）
languagesPicks = 语言（标识符）
multiSelection = {0} 个选区
multiSelectionRange = {0} 个选区（选中 {1} 个字符）
noEditor = 此时没有活动的文本编辑器
noFileEditor = 此时无活动文件
noWritableCodeEditor = 活动代码编辑器为只读模式。
pickAction = 选择操作
pickEncodingForReopen = 选择文件编码以重新打开文件
pickEncodingForSave = 选择用于存储的文件编码
pickEndOfLine = 选择换行符
pickLanguage = 选择语言模式
pickLanguageToConfigure = 选择要与“{0}”关联的语言模式
reopenWithEncoding = 通过编码重新打开
saveWithEncoding = 通过编码存储
screenReaderDetected = 已为屏幕阅读器优化
screenReaderDetectedExplanation.answerNo = 否
screenReaderDetectedExplanation.answerYes = 是
screenReaderDetectedExplanation.question = 是否在通过屏幕阅读器使用 VS Code？（使用屏幕阅读器时，折叠、小地图和自动换行等功能会被禁用。）
selectEOL = 选择换行符
selectEncoding = 选择编码
selectIndentation = 选择缩进
selectLanguageMode = 选择语言模式
showLanguageExtensions = 搜索“{0}”相关语言扩展…
singleSelection = 行 {0}，列 {1}
singleSelectionRange = 行 {0}，列 {1}（选中 {2} 个字符）
spacesSize = 空格 {0}
status.editor.columnSelectionMode = 列选择模式
status.editor.encoding = 编辑器编码
status.editor.eol = 编辑器换行符
status.editor.indentation = 编辑器缩进
status.editor.info = 文件信息
status.editor.mode = 编辑器语言模式
status.editor.screenReaderMode = 屏幕阅读器模式
status.editor.selection = 编辑器选区
status.editor.tabFocusMode = 辅助功能模式
tabFocusModeEnabled = 按 Tab 键移动焦点
tabSize = 制表符 {0}

[vs/workbench/browser/parts/editor/editorWidgets]
openWorkspace = 打开工作区

[vs/workbench/browser/parts/editor/tabsTitleControl]
araLabelTabActions = 选项卡操作

[vs/workbench/browser/parts/editor/textDiffEditor]
textDiffEditor = 文本差异编辑器

[vs/workbench/browser/parts/editor/textEditor]
editor = 编辑器

[vs/workbench/browser/parts/editor/textResourceEditor]
textEditor = 文本编辑器

[vs/workbench/browser/parts/editor/titleControl]
araLabelEditorActions = 编辑器操作
draggedEditorGroup = {0}（+{1}）

[vs/workbench/browser/parts/notifications/notificationsActions]
clearNotification = 清除通知
clearNotifications = 清除所有通知
collapseNotification = 折叠通知
configureNotification = 配置通知
copyNotification = 拷贝文本
expandNotification = 展开通知
hideNotificationsCenter = 隐藏通知

[vs/workbench/browser/parts/notifications/notificationsAlerts]
alertErrorMessage = 错误：{0}
alertInfoMessage = 信息：{0}
alertWarningMessage = 警告：{0}

[vs/workbench/browser/parts/notifications/notificationsCenter]
notifications = 通知
notificationsEmpty = 无新通知
notificationsToolbar = 通知中心操作

[vs/workbench/browser/parts/notifications/notificationsCommands]
clearAllNotifications = 清除所有通知
focusNotificationToasts = 聚焦到通知
hideNotifications = 隐藏通知
notifications = 通知
showNotifications = 显示通知

[vs/workbench/browser/parts/notifications/notificationsList]
notificationAriaLabel = {0}，通知
notificationWithSourceAriaLabel = {0}，源：{1}，通知
notificationsList = 通知列表

[vs/workbench/browser/parts/notifications/notificationsStatus]
hideNotifications = 隐藏通知
noNotifications = 无新通知
noNotificationsWithProgress = 无新通知，{0} 个通知正在更新进度条中
notifications = {0} 条新通知
notificationsWithProgress = {1} 条新通知，{0} 个通知正在更新进度条中
oneNotification = 1 条新通知
oneNotificationWithProgress = 1 条新通知，{0} 个通知正在更新进度条中
status.message = 状态消息
status.notifications = 通知
zeroNotifications = 没有通知

[vs/workbench/browser/parts/notifications/notificationsViewer]
executeCommand = 点击以执行命令“{0}”
notificationActions = 通知操作
notificationSource = 来源：{0}

[vs/workbench/browser/parts/panel/panelActions]
closePanel = 关闭面板栏
focusPanel = 聚焦到面板栏
maximizePanel = 最大化面板栏
miShowPanel = 显示面板栏(&&P)
minimizePanel = 取消最大化面板栏
nextPanelView = 下一个面板栏面板
positionPanelBottom = 使面板栏靠下
positionPanelLeft = 使面板栏靠左
positionPanelRight = 使面板栏靠右
previousPanelView = 上一个面板栏视图
toggleMaximizedPanel = 使面板栏最大化或取消最大化
togglePanel = 显示或隐藏面板栏
view = 视图

[vs/workbench/browser/parts/panel/panelPart]
hidePanel = 隐藏面板栏
panel.emptyMessage = 将视图拖动到所需面板中。

[vs/workbench/browser/parts/sidebar/sidebarPart]
focusSideBar = 聚焦到侧边栏
viewCategory = 视图

[vs/workbench/browser/parts/statusbar/statusbarPart]
hide = 隐藏
hideStatusBar = 隐藏状态栏

[vs/workbench/browser/parts/titlebar/menubarControl]
DownloadingUpdate = 正在下载更新…
checkForUpdates = 检查更新(&&U)…
checkingForUpdates = 正在检查更新…
download now = 立即下载(&&O)
goToSetting = 打开设置
installUpdate... = 安装更新(&&U)…
installingUpdate = 正在安装更新…
mEdit = 编辑(&&E)
mFile = 文件(&&F)
mGoto = 转到(&&G)
mHelp = 帮助(&&H)
mRun = 运行(&&R)
mSelection = 选择(&&S)
mTerminal = 终端(&&T)
mView = 查看(&&V)
menubar.customTitlebarAccessibilityNotification = 为您启用了辅助功能支持。对于最易于访问的体验，我们建议使用自定义标题栏样式。
restartToUpdate = 重新启动以更新(&&U)

[vs/workbench/browser/parts/titlebar/titlebarPart]
devExtensionWindowTitlePrefix = [扩展开发宿主]
patchedWindowTitle = [不受支持]
userIsAdmin = [管理员]
userIsSudo = [超级用户]

[vs/workbench/browser/parts/views/viewPaneContainer]
hideView = 隐藏
viewMoveDown = 向下移动视图
viewMoveLeft = 向左移动视图
viewMoveRight = 向右移动视图
viewMoveUp = 向上移动视图
viewToolbarAriaLabel = {0}操作

[vs/workbench/browser/parts/views/viewsService]
focus view = 聚焦到“{0}”视图
resetViewLocation = 重置位置
view category = 视图

[vs/workbench/browser/viewlet]
collapse = 全部折叠
compositePart.hideSideBarLabel = 隐藏侧边栏

[vs/workbench/browser/workbench]
loaderErrorNative = 未能加载必要的文件。请重新启动 VS Code 重试。详细信息：{0}

[vs/workbench/browser/workbench.contribution]
activeEditorLong = “${activeEditorLong}”：文件的绝对路径。
activeEditorMedium = “${activeEditorMedium}”：相对于工作区文件夹的文件路径。
activeEditorShort = “${activeEditorShort}”：文件名。
activeFolderLong = “${activeFolderLong}”：文件所在文件夹的绝对路径。
activeFolderMedium = “${activeFolderMedium}”：相对于工作区文件夹的、包含文件的文件夹的路径。
activeFolderShort = “${activeFolderShort}”：文件所在的文件夹名称。
activityBarVisibility = 显示工作台活动栏。
appName = “${appName}”：应用程序名称，如 `"VS Code"`。
centeredLayoutAutoResize = 如果在居中布局中打开了超过一组编辑器，是否自动将宽度调整为最大宽度值。当回到只打开了一组编辑器的状态，将自动将宽度调整为原始的居中宽度值。
closeEmptyGroups = 编辑器组中最后一个选项卡关闭时这个空组的行为。若启用，将自动关闭空组。若禁用，空组仍将保留在网格布局中。
closeOnFileDelete = 当文件被其他进程删除或重命名时，是否自动关闭在这个期间内打开了此文件的编辑器。若禁用此项，在这种情况下将保留编辑器。若从应用内部进行删除，将始终关闭编辑器，并且为了保护您的数据，已更新文件始终不会关闭。
closeOnFocusLost = “快速打开”是否在其失去焦点时自动关闭。
commandHistory = 命令栏中保留最近使用命令的数量。设置为 `0` 表示禁用命令历史功能。
customMenuBarAltFocus = 按 Alt 键时聚焦到菜单栏。此设置不影响使用 Alt 键切换菜单栏。
dirty = “${dirty}”：表示活动编辑器为脏的脏指示器。
editorOpenPositioning = 编辑器打开的位置。选择 `"left"` 或 `"right"` 可分别在当前活动编辑器的左侧或右侧打开。选择 `first`（最前）或 `last`（最后）打开的位置与当前活动编辑器无关。
editorTabCloseButton = 是否显示选项卡中的关闭按钮。
enableMenuBarMnemonics = 使用 Alt 键打开主菜单。若禁用快捷键，这些 Alt 快捷键将能绑定到编辑器命令。
enablePreview = 打开的编辑器是否为预览编辑器。预览编辑器在被固定（例如，通过双击或编辑）前可重用，其字体样式为斜体。
enablePreviewFromQuickOpen = 从“快速打开”打开的编辑器是否为预览编辑器。预览编辑器在被固定（例如，通过双击或编辑）前可重用。
focusRecentEditorAfterClose = 是否按最常使用的顺序或从左到右的顺序关闭选项卡。
folderName = “${folderName}”：文件所在工作区文件夹的名称。
folderPath = “${folderpath}”：文件所在工作区文件夹的绝对路径。
fontAliasing = 如何在窗口中渲染字体。
highlightModifiedTabs = 绘制已修改（存在更新）的编辑器选项卡的顶部边框。
limitEditorsEnablement = 限制打开的编辑器的数量，使已存储的最近较少使用的编辑器自动关闭，以为新打开的编辑器腾出空间。
limitEditorsMaximum = 打开编辑器的最大数量。另请参见 "#workbench.editor.limit.perEditorGroup#" 设置。
menuBarVisibility = 显示菜单栏。`"toggle"` 表示隐藏菜单栏，按一次 Alt 键则将显示此菜单栏。默认情况下，除非窗口为全屏，否则菜单栏可见。
mouseBackForwardToNavigate = 使用鼠标上的 4 号和 5 号按钮（如果有）在打开的编辑器之间导航。
movingViewContainer = 在一些视图的上下文菜单中显示“移动到其他面板”的菜单项。目前适用于大纲视图和扩展提供的视图。
openDefaultKeybindings = 在打开快捷键设置时同时打开显示所有默认快捷键的编辑器。
openDefaultSettings = 在打开设置时同时打开显示所有默认设置的编辑器。
openFilesInNewWindow = 在新窗口中打开文件。\n此设置可能会被忽略，如在使用 `--new-window` 或 `--reuse-window` 命令行选项时。
openFilesInNewWindowMac = 在新窗口中打开文件。\n此设置可能会被忽略，如在使用 `-new-window` 或 `-reuse-window` 命令行选项时。
openFoldersInNewWindow = 是否在新窗口中打开文件。\n此设置可能会被忽略，如在使用 `--new-window` 或 `--reuse-window` 命令行选项时。
panelDefaultLocation = 面板栏的默认位置。可显示在工作台的底部，左侧或右侧。
perEditorGroup = 使打开编辑器的最大数量适用于单个组中的编辑器。默认情况下，最大数量适用于所有打开的编辑器。
preserveInput = 当再次打开命令栏时，是否恢复上一次输入的内容。
remoteName = “${remoteName}”，如 `"SSH"`。
restoreViewState = 在重新打开已关闭文件时，还原最后一个视图的状态（如滚动位置）
revealIfOpen = 是否在打开的任何可见组中显示编辑器。如果禁用，编辑器将优先在当前活动的编辑器组中打开。如果启用，将会显示在已打开的编辑器，而不是在当前活动的编辑器组中再次打开。请有些情况下会忽略此设置，例如，强制编辑器在特定组中打开或当前活动组的一侧时。
rootName = “${rootName}”：工作区文件夹的名称。
rootPath = “${rootPath}”：工作区文件夹的绝对路径。
separator = “${separator}”：一种条件分隔符（`-`），仅在被包含值或静态文本的变量包围时显示。
settings.editor.desc = 默认使用的设置编辑器。
settings.editor.json = JSON 设置编辑器。
settings.editor.ui = 可视化设置编辑器。
showEditorTabs = 打开的编辑器是否显示在选项卡中。
showIcons = 是否在编辑器选项卡中显示图标。要求同时启用图标主题。
sideBarLocation = 边栏的位置。它可显示在工作台的左侧或右侧。
sideBySideDirection = 编辑器在并排打开时出现的默认位置。默认在当前活动编辑器右侧打开。若更改为 `"down"`，则在当前活动编辑器下方打开。
splitSizing = 拆分编辑器组时编辑器组的大小。
statusBarVisibility = 工作台底部状态栏的可见性。
tabDescription = 编辑器标签的格式。
tabSizing = 编辑器选项卡的大小。
untitledLabelFormat = 无标题编辑器的标题格式。
useSplitJSON = 在将设置编辑为 JSON 时是否使用拆分 JSON 编辑器。
viewVisibility = 是否显示视图头部的操作项。视图头部操作项可以一直，或是仅当聚焦到和悬停在视图上时显示。
window.menuBarVisibility.compact = 菜单在侧边栏中显示为一个紧凑的按钮。
window.menuBarVisibility.default = 在全屏模式下隐藏菜单。
window.menuBarVisibility.hidden = 始终隐藏菜单。
window.menuBarVisibility.toggle = 按 Alt 键时显示菜单。
window.menuBarVisibility.visible = 始终显示菜单。
window.openFilesInNewWindow.default = 在新窗口中打开文件，除非文件是从应用程序内打开的。
window.openFilesInNewWindow.defaultMac = 在活动窗口中打开文件，除非文件是从“程序坞”或“访达”打开的。
window.openFilesInNewWindow.off = 在活动窗口中打开文件。
window.openFilesInNewWindow.on = 总是在新窗口中打开文件。
window.openFoldersInNewWindow.default = 使用“文件”菜单时，在现有的窗口中打开文件夹；从外部打开时，在新窗口中打开文件夹。
window.openFoldersInNewWindow.off = 在现有的窗口中打开文件夹。
window.openFoldersInNewWindow.on = 始终在新窗口中打开文件夹。
windowConfigurationTitle = 窗口
windowTitle = 窗口标题。变量可根据上下文替换：
workbench.editor.labelFormat.default = 显示文件名。当启用选项卡且在同一组内有两个相同名称的文件时，将添加每个文件路径中可以用于区分的部分。在选项卡被禁用且编辑器活动时，将显示相对于工作区文件夹的路径。
workbench.editor.labelFormat.long = 在文件的绝对路径之后显示文件名。
workbench.editor.labelFormat.medium = 在文件相对当前工作区文件夹的路径之后显示文件名。
workbench.editor.labelFormat.short = 在文件的目录名之后显示文件名。
workbench.editor.splitSizingDistribute = 将所有编辑器组拆分为相等的部分。
workbench.editor.splitSizingSplit = 将活动编辑器组拆分为相等的部分。
workbench.editor.tabSizing.fit = 始终将标签页保持足够大，能够完全显示编辑器标签。
workbench.editor.tabSizing.shrink = 在不能同时显示所有选项卡时，允许选项卡缩小。
workbench.editor.untitled.labelFormat.content = 从文件的第一行推测标题，除非有关联的文件路径。
workbench.editor.untitled.labelFormat.name = 不从文件的内容中推测标题。
workbench.fontAliasing.antialiased = 像素级字体平滑，可能会导致字体整体显示得更细。
workbench.fontAliasing.auto = 根据显示器 DPI 自动应用 `"default"` 或 `"antialiased"` 选项。
workbench.fontAliasing.default = 次像素级字体平滑，在大多数非高清显示器上显示最清晰的文字。
workbench.fontAliasing.none = 禁用字体平滑，显示边缘粗糙、有锯齿的文字。
workbench.quickOpen.preserveInput = 在打开“快速打开”视图时，是否自动恢复上一次输入的值。
zenMode.centerLayout = 在打开禅模式时是否启用居中布局。
zenMode.fullScreen = 在打开禅模式时是否将工作台切换到全屏。
zenMode.hideActivityBar = 在打开禅模式时是否隐藏工作台左侧的活动栏。
zenMode.hideLineNumbers = 在打开禅模式时是否隐藏编辑器行号。
zenMode.hideStatusBar = 在打开禅模式时是否隐藏工作台底部的状态栏。
zenMode.hideTabs = 在打开禅模式时是否隐藏工作台选项卡。
zenMode.restore = 若窗口在处于禅模式时退出，其在恢复时是否还原到禅模式。
zenMode.silentNotifications = 在禅模式下隐藏一般通知。错误通知不受影响。
zenModeConfigurationTitle = 禅模式
