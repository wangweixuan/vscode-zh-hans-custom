[vs/workbench/contrib/backup/electron-sandbox/backupTracker]
backupErrorDetails = 请尝试先存储或还原未存储的编辑器，然后重试。
backupTrackerBackupFailed = 未存储的编辑器无法存储到备份位置。
backupTrackerConfirmFailed = 无法存储或还原未存储的编辑器。
ok = 确定

[vs/workbench/contrib/files/browser/editors/binaryFileEditor]
binaryFileEditor = 二进制文件查看器

[vs/workbench/contrib/files/browser/editors/textFileEditor]
createFile = 创建文件
openFolderError = 文件是目录
textFileEditor = 文本文件编辑器

[vs/workbench/contrib/files/browser/editors/textFileSaveErrorHandler]
compareChanges = 比较
configure = 配置
discard = 放弃
dontShowAgain = 不再显示
genericSaveError = 未能存储“{0}”：{1}
learnMore = 了解详细信息
overwrite = 覆盖
overwriteElevated = 以管理员身份覆盖…
overwriteElevatedSudo = 以 sudo 身份覆盖…
permissionDeniedSaveError = 存储“{0}”失败：权限不足。选择“以管理员身份覆盖…”可以管理员身份重试。
permissionDeniedSaveErrorSudo = 存储“{0}”失败：权限不足。选择“以 sudo 身份重试…”可以超级用户身份重试。
readonlySaveError = 存储“{0}”失败：文件为只读。可选择“覆盖”以尝试使其可写。
readonlySaveErrorAdmin = 存储“{0}”失败：文件为只读。选择“以管理员身份覆盖…”可以管理员身份重试。
readonlySaveErrorSudo = 存储“{0}”失败：文件为只读。选择“以 sudo 身份重试…”可以超级用户身份重试。
retry = 重试
saveConflictDiffLabel = {0}（硬盘上）⟷ {1}（{2} 中）— 解决存储冲突
saveElevated = 以管理员身份重试…
saveElevatedSudo = 以 sudo 身份重试…
staleSaveError = 未能存储“{0}”：硬盘上的内容较新。请将您的版本和硬盘上的版本进行比较。
userGuide = 使用编辑器工具栏中的操作撤销更改或覆盖硬盘上的内容

[vs/workbench/contrib/files/browser/explorerViewlet]
explore = 资源
folders = 文件
noFolderHelp = 没有打开文件夹。\n[打开文件夹](command:{0})
noWorkspaceHelp = 工作区中没有文件夹。\n[添加文件夹](command:{0})
remoteNoFolderHelp = 已连接到远程。\n[打开文件夹](command:{0})

[vs/workbench/contrib/files/browser/fileActions]
binFailed = 移动到回收站失败。是否永久删除？
clipboardComparisonLabel = 粘贴板 ⟷ {0}
closeGroup = 关闭组
collapseExplorerFolders = 在“资源”面板中折叠文件夹
compareWithClipboard = 比较活动文件与粘贴板内容
confirmDeleteMessageFile = 是否永久删除“{0}”？
confirmDeleteMessageFilesAndDirectories = 是否永久删除以下 {0} 个文件或文件夹（包括其内容）？
confirmDeleteMessageFolder = 是否永久删除“{0}”及其内容？
confirmDeleteMessageMultiple = 是否永久删除以下 {0} 个文件？
confirmDeleteMessageMultipleDirectories = 是否永久删除以下 {0} 个目录及其内容？
confirmMoveTrashMessageFile = 是否删除“{0}”？
confirmMoveTrashMessageFilesAndDirectories = 是否删除以下 {0} 个文件或文件夹（包括其内容）？
confirmMoveTrashMessageFolder = 是否确实要删除“{0}”及其内容？
confirmMoveTrashMessageMultiple = 是否删除以下 {0} 个文件？
confirmMoveTrashMessageMultipleDirectories = 是否删除以下 {0} 个文件夹及其内容？
copyFile = 拷贝
createNewFile = 新建文件
createNewFolder = 新建文件夹
delete = 删除
deleteButtonLabel = 删除(&&D)
deleteButtonLabelRecycleBin = 移动到回收站(&&M)
deleteButtonLabelTrash = 移动到废纸篓(&&M)
deletePermanentlyButtonLabel = 永久删除(&&D)
dirtyMessageFileDelete = 删除的文件中有未存储的更改。是否继续？
dirtyMessageFilesDelete = 删除的文件中有未存储的更改。是否继续？
dirtyMessageFolderDelete = 删除的文件夹中有 {0} 个文件有未存储的更改。是否继续？
dirtyMessageFolderOneDelete = 删除的文件夹中有 1 个文件有未存储的更改。是否继续？
dirtyWarning = 如果不存储，更改将丢失。
doNotAskAgain = 不再询问
download = 下载
downloadFile = 下载文件
downloadFolder = 下载文件夹
emptyFileNameError = 必须提供文件或文件夹名。
fileDeleted = 粘贴的文件已被删除或移动
fileIsAncestor = 粘贴的项目是目标文件夹的上级
fileNameExistsError = 此位置已存在文件或文件夹 **{0}**。请选择其他名称。
fileNameStartsWithSlashError = 文件或文件夹名称不能以斜杠开头。
fileNameWhitespaceWarning = 文件名称开头或末尾包含空格。
focusFilesExplorer = 聚焦到“资源”面板
globalCompareFile = 比较活动文件与…
invalidFileNameError = 名称 **{0}** 作为文件或文件夹名无效。请选择其他名称。
irreversible = 此操作不可逆！
newFile = 新建文件
newFolder = 新建文件夹
newUntitledFile = 新的无标题文件
openFileInNewWindow = 在新窗口中打开活动文件
openFileToCompare = 首先打开文件以将其与另外一个文件比较。
openFileToShow = 请先打开要在浏览器中显示的文件
openFileToShowInNewWindow.nofile = 请先打开要在新窗口中打开的文件
openFileToShowInNewWindow.unsupportedschema = 活动编辑器必须包含可打开的资源。
pasteFile = 粘贴
refreshExplorer = 刷新“资源”面板
rename = 重命名
retry = 重试
retryButtonLabel = 重试(&&R)
saveAllInGroup = 存储组中的全部内容
showInExplorer = 在侧边栏中显示活动文件
toggleAutoSave = 切换开关自动存储
trashFailed = 未能删除到废纸篓。是否永久删除？
undoBin = 可以从回收站还原。
undoBinFiles = 可以从回收站还原这些文件。
undoTrash = 可以从废纸篓还原。
undoTrashFiles = 可以从废纸篓还原这些文件。
workbench.files.action.reopenWithEditor = 打开方式…
workbench.files.action.toggleEditorType = 切换编辑器类型

[vs/workbench/contrib/files/browser/fileActions.contribution]
acceptLocalChanges = 使用您的更改覆盖硬盘上的内容
close = 关闭
closeAll = 全部关闭
closeEditor = 关闭编辑器
closeOthers = 关闭其他
closeSaved = 关闭已存储
compareActiveWithSaved = 比较活动与已存储的文件
compareSelected = 将已选项进行比较
compareSource = 选择以进行比较
compareWithSaved = 与已存储文件比较
compareWithSelected = 与已选项目进行比较
copyPath = 拷贝路径
copyPathOfActive = 拷贝活动文件的路径
copyRelativePath = 拷贝相对路径
copyRelativePathOfActive = 拷贝活动文件的相对路径
cut = 剪切
deleteFile = 永久删除
explorerOpenWith = 打开方式…
file = 文件
filesCategory = 文件
miAutoSave = 自动存储(&&U)
miCloseEditor = 关闭编辑器(&&C)
miGotoFile = 转到文件(&&F)…
miNewFile = 新建文件(&&N)
miOpen = 打开(&&O)...
miOpenFile = 打开文件(&&O)...
miOpenFolder = 打开文件夹(&&F)...
miOpenWorkspace = 打开工作区(&&K)...
miRevert = 还原文件(&&V)
miSave = 存储(&&S)
miSaveAll = 全部存储(&&L)
miSaveAs = 存储为(&&A)…
newFile = 新建文件
openFile = 打开文件…
openToSide = 在侧边打开
revealInSideBar = 在“资源”面板中显示
revert = 还原文件
revertLocalChanges = 放弃您的更改并还原为硬盘上的内容
saveAll = 全部存储
saveAllInGroup = 存储组中的全部内容
saveFiles = 存储所有文件
view = 视图
workspaces = 工作区

[vs/workbench/contrib/files/browser/fileCommands]
genericRevertError = 未能还原“{0}”：{1}
genericSaveError = 未能存储“{0}”：{1}
modifiedLabel = {0}（硬盘上）⟷ {1}
openFileToCopy = 打开文件以拷贝路径
removeFolderFromWorkspace = 将文件夹从工作区删除
save = 存储
saveAll = 全部存储
saveAs = 存储为…
saveWithoutFormatting = 存储但不更改格式

[vs/workbench/contrib/files/browser/files.contribution]
askUser = 要求手动解决存储冲突。
associations = 配置语言的文件关联（如 `"*.extension": "html"`）。这些关联的优先级高于已安装语言的默认关联。
autoGuessEncoding = 启用后，将在文件打开时尝试猜测字符集编码。可以按语言对此项进行配置。
autoReveal = 在编辑器中打开文件时，自动在“资源”面板中选择该文件。
autoReveal.focusNoScroll = 文件不会滚动到视图中，但仍会获得焦点。
autoReveal.off = 不会显示和选择文件。
autoReveal.on = 将显示和选择文件。
autoSave = 自动存储文件。可在[此处](https://code.visualstudio.com/docs/editor/codebasics#_save-auto-save)阅读有关自动存储的详细信息。
autoSaveDelay = 自动存储文件的延迟时间，以毫秒为单位（适用于 `#files.autoSave#` 设置为 `{0}` 时）。
binaryFileEditor = 二进制文件编辑器
compressSingleChildFolders = 在“资源”面板中以紧凑模式显示文件夹。紧凑模式下，只含一个子文件夹的文件夹将被组合成树中的单个元素。紧凑模式对 Java 包结构很有用。
confirmDelete = 在“资源”面板中把文件删除到废纸篓时进行确认。
confirmDragAndDrop = 在“资源”面板中拖放移动文件或文件夹时进行确认。
defaultLanguage = 分配给新文件的默认语言模式。
enableDragAndDrop = 启用“资源”面板中的拖放移动文件和文件夹功能。
encoding = 在读取和写入文件时使用的默认字符集编码。可以按语言对此项进行配置。
eol = 默认换行符。
eol.CRLF = CRLF
eol.LF = LF
eol.auto = 使用具体操作系统规定的行末字符。
exclude = 配置排除的文件和文件夹的 glob 模式。例如，“资源”面板将根据此设置决定要显示或隐藏的文件和文件夹。可在[此处](https://code.visualstudio.com/docs/editor/codebasics#_advanced-search-options)阅读有关 glob 模式的详细信息。
explorer.decorations.badges = 在文件列表中根据文件状态显示不同徽章。
explorer.decorations.colors = 在文件列表中根据文件状态显示不同颜色。
explorer.incrementalNaming = 在粘贴文件（夹）时如何重命名重复的项目。
explorerConfigurationTitle = 资源
files.autoSave.afterDelay = 当文件修改后的时间超过 `#files.autoSaveDelay#` 中配置的值时自动进行存储。
files.autoSave.off = 永不自动存储更新后的文件。
files.autoSave.onFocusChange = 编辑器失去焦点时自动存储更新后的文件。
files.autoSave.onWindowChange = 窗口失去焦点时自动存储更新后的文件。
files.exclude.boolean = 匹配文件路径所依据的 glob 模式。设置为 `true` 或 `false` 可启用或禁用该模式。
files.exclude.when = 对匹配文件的同级文件的其他检查。使用 $(basename) 作为匹配文件名的变量。
files.restoreUndoStack = 重新打开文件后，还原撤销堆栈。
files.saveConflictResolution = 解决存储冲突的方法。如果文件存储时，磁盘上的文件已被其他程序更改，则会发生存储冲突。一般情况下，您应将编辑器中的更改与磁盘上的版本进行比较。只有您经常遇到存储冲突时，才应更改此设置；如果不谨慎地使用，可能会导致数据丢失。
files.simpleDialog.enable = 使用简化的文件对话框，以代替系统文件对话框。
filesConfigurationTitle = 文件
formatOnSave = 在存储时格式化文件。格式化程序必须可用，延迟后文件不能存储，并且编辑器不能关闭。
hotExit = 是否在会话间记住未存储的文件，以允许在退出编辑器时跳过存储提示。
hotExit.off = 禁用热退出。
hotExit.onExit = 在关闭所有窗口（macOS 除外），或触发 `workbench.action.quit` 命令时进行热退出。下次启动时将还原所有已备份的窗口。
hotExit.onExitAndWindowClose = 在关闭所有窗口（macOS 除外），或触发 `workbench.action.quit` 命令时引起应用程序关闭。对于任何有文件夹打开的窗口，则不论该窗口是否是最后一个窗口进行热退出。下次启动时将还原所有未打开文件夹的窗口。若要还原打开有文件夹的窗口，请将 `#window.restoreWindows#` 设置为 `all`。
hotExit.onExitAndWindowCloseBrowser = 当退出浏览器或关闭网页时，触发热退出。
insertFinalNewline = 启用后，存储文件时在文件末尾插入一个最终新行。
maxMemoryForLargeFilesMB = 在打开大型文件时，VS Code 可在重新启动后使用的内存。在命令行中指定 `--max-memory=新的大小` 参数可达到相同效果。
miViewExplorer = 资源(&&E)
openEditorsVisible = 在“打开的编辑器”视图中显示的编辑器数量。
overwriteFileOnDisk = 用编辑器中的更改替换磁盘上的版本。会导致磁盘上的版本丢失。
showExplorerViewlet = 显示“资源”面板
simple = 在重复名称的末尾添加单词“copy”，后面可能跟一个数字。
smart = 在重复名称的末尾添加一个数字。如果名称以数字结尾，则增大该数字。
sortOrder = 文件和文件夹在“资源”面板中如何排列。
sortOrder.default = 按名称的字母顺序排列，文件夹显示在文件前。
sortOrder.filesFirst = 按名称的字母顺序排列，文件显示在文件夹前。
sortOrder.mixed = 按名称的字母顺序排列，两者穿插显示。
sortOrder.modified = 按修改日期从新到旧排列，文件夹显示在文件前。
sortOrder.type = 按扩展名的字母顺序排列，文件夹显示在文件前。
trimFinalNewlines = 启用后，存储文件时将删除在最终新行后的所有新行。
trimTrailingWhitespace = 启用后，将在存储文件时剪裁行末空格。
useTrash = 在删除文件或文件夹时，将它们移动到操作系统的回收站中。禁用此设置将永久删除文件或文件夹。
view = 视图
watcherExclude = 配置文件路径的 glob 模式以从文件监视排除。模式必须在绝对路径上匹配（例如 ** 前缀或完整路径需正确匹配）更改此设置需要重新启动。如果在启动时遇到 VS Code 消耗大量 CPU 时间，则可以排除大型文件夹以减少初始加载。

[vs/workbench/contrib/files/browser/views/emptyView]
noWorkspace = 无打开的文件夹

[vs/workbench/contrib/files/browser/views/explorerDecorationsProvider]
canNotResolve = 未能解析工作区文件夹
label = 资源
symbolicLlink = 符号链接
unknown = 未知文件类型

[vs/workbench/contrib/files/browser/views/explorerView]
explorerSection = “文件”视图

[vs/workbench/contrib/files/browser/views/explorerViewer]
addFolder = 添加文件夹(&&A)
addFolders = 添加文件夹(&&A)
cancel = 取消
confirmMove = 是否要移动“{0}”？
confirmMultiMove = 是否移动以下 {0} 个文件？
confirmOverwrite = 目标文件夹中已存在名称相同的项目，是否替换？
confirmRootMove = 是否要更改工作区中根文件夹“{0}”的顺序？
confirmRootsMove = 是否要更改工作区中根文件夹的顺序？
copyFolder = 拷贝文件夹(&&C)
copyFolders = 拷贝文件夹(&&C)
copyfolder = 是否要拷贝文件夹“{0}”？
copyfolders = 是否要拷贝文件夹？
doNotAskAgain = 不再询问
dropFolder = 要拷贝文件夹“{0}”，还是要将它添加到工作区？
dropFolders = 要拷贝文件夹，还是要将它们添加到工作区？
fileInputAriaLabel = 输入文件名。按 Enter 键确认，按 Esc 键取消。
irreversible = 此操作不可逆！
moveButtonLabel = 移动(&&M)
replaceButtonLabel = 替换(&&R)
treeAriaLabel = 文件资源管理器
uploadProgress = {0} 个文件，共 {1} 个
uploadingFiles = 正在上传

[vs/workbench/contrib/files/browser/views/openEditorsView]
dirtyCounter = {0} 个未存储
openEditors = 打开的编辑器

[vs/workbench/contrib/files/common/dirtyFilesIndicator]
dirtyFile = 1 个未存储的文件
dirtyFiles = {0} 个未存储的文件

[vs/workbench/contrib/files/common/editors/fileEditorInput]
orphanedFile = {0}（已删除）
orphanedReadonlyFile = {0}（已删除，只读）
readonlyFile = {0}（只读）

[vs/workbench/contrib/files/common/openWith]
builtinProviderDisplayName = 内置
promptOpenWith.currentlyActive = 当前处于活动状态
promptOpenWith.defaultEditor.displayName = 文本编辑器
promptOpenWith.placeHolder = 为“{0}”选择编辑器
promptOpenWith.setDefaultTooltip = 设置为“{0}”文件的默认编辑器

[vs/workbench/contrib/files/common/workspaceWatcher]
enospcError = 未能在大型工作区中监视文件更改。请按照说明链接来解决此问题。
installNet = 下载 .NET Framework 4.5
learnMore = 说明
netVersionError = 需要 Microsoft .NET Framework 4.5。请访问链接安装它。

[vs/workbench/contrib/files/electron-sandbox/fileActions.contribution]
filesCategory = 文件
openContainer = 打开所在的文件夹
revealInMac = 在访达中显示
revealInWindows = 在资源管理器中显示

[vs/workbench/contrib/files/electron-sandbox/fileCommands]
openFileToReveal = 打开文件以显示

[vs/workbench/contrib/files/electron-sandbox/files.contribution]
textFileEditor = 文本文件编辑器

[vs/workbench/contrib/files/electron-sandbox/textFileEditor]
configureMemoryLimit = 配置内存限制
fileTooLargeForHeapError = 要打开此大小的文件，您需要重新启动 VS Code 并允许使用更多内存。
relaunchWithIncreasedMemoryLimit = 以 {0} MB 内存重新启动

[vs/workbench/contrib/scm/browser/activity]
scmPendingChangesBadge = {0} 个挂起的更改
status.scm = 版本控制（{0}）：{1}

[vs/workbench/contrib/scm/browser/dirtydiffDecorator]
change = 第 {0} 个更改，共 {1} 个
changes = 第 {0} 个更改，共 {1} 个
editorGutterAddedBackground = 编辑器行号栏中添加的行的背景色。
editorGutterDeletedBackground = 编辑器行号栏中删除的行的背景色。
editorGutterModifiedBackground = 编辑器行号栏中修改的行的背景色。
miGotoNextChange = 下一个更改(&&C)
miGotoPreviousChange = 上一个更改(&&C)
minimapGutterAddedBackground = 小地图中添加的行的背景色。
minimapGutterDeletedBackground = 小地图中删除的行的背景色。
minimapGutterModifiedBackground = 小地图中修改的行的背景色。
move to next change = 移动到下一个更改
move to previous change = 移动到上一个更改
overviewRulerAddedForeground = 概览标尺中添加的行的颜色。
overviewRulerDeletedForeground = 概览标尺中删除的行的颜色。
overviewRulerModifiedForeground = 概览标尺中修改的行的颜色。
show next change = 显示下一个更改
show previous change = 显示上一个更改

[vs/workbench/contrib/scm/browser/mainPane]
open in terminal = 在终端中打开
scm providers = 版本控制提供程序

[vs/workbench/contrib/scm/browser/repositoryPane]
scm = 源代码管理
toggleViewMode = 切换视图模式

[vs/workbench/contrib/scm/browser/scm.contribution]
alwaysShowActions = 在“版本”面板中始终显示内联操作。
alwaysShowProviders = 始终显示“版本控制提供程序”子面板。
autoReveal = 在打开文件时是否应自动显示和选择文件。
diffDecorations = 编辑器中差异的显示效果。
diffGutterWidth = 编辑器行号栏中不同装饰的宽度，以像素为单位（添加和修改）。
inputFontFamily = 输入消息的字体。`"default"` 表示工作台用户界面字体系列，`"editor"` 表示 `#editor.fontFamily#` 的值，或者使用自定义字体系列。
miViewSCM = 版本(&&C)
providersVisible = 在“版本控制提供程序”子面板中可见的提供程序数。设置为 `0` 表示手动调整视图的大小。
scm accept = 版本控制：接受输入
scm.countBadge = 显示版本控制计数徽章。
scm.countBadge.all = 显示所有版本控制程序的计数的总和。
scm.countBadge.focused = 显示聚焦的版本控制提供程序的计数。
scm.countBadge.off = 不显示版本控制计数徽章。
scm.defaultViewMode = 版本控制中存储库的样式。
scm.defaultViewMode.list = 显示为列表。
scm.defaultViewMode.tree = 显示为树。
scm.diffDecorations.all = 在所有可用位置显示差异装饰器。
scm.diffDecorations.gutter = 仅在行号栏中显示差异装饰器。
scm.diffDecorations.minimap = 仅在小地图中显示差异装饰器。
scm.diffDecorations.none = 不显示任何差异装饰器。
scm.diffDecorations.overviewRuler = 仅在预览标尺中显示差异装饰器。
scm.diffDecorationsGutterVisibility = 显示行号栏中版本控制差异装饰器。
scm.diffDecorationsGutterVisibility.always = 始终显示差异装饰器。
scm.diffDecorationsGutterVisibility.hover = 仅在悬停时显示差异装饰器。
scmConfigurationTitle = 版本
source control = 版本
toggleSCMViewlet = 显示版本
view = 视图

[vs/workbench/contrib/scm/browser/scmViewlet]
no open repo = 当前没有版本控制提供程序进行注册。
scm = 版本
source control = 版本
viewletTitle = {0}：{1}

[vs/workbench/contrib/tags/electron-browser/workspaceTagsService]
openWorkspace = 打开工作区
selectToOpen = 选择要打开的工作区
selectWorkspace = 选择工作区
workspaceFound = 此文件夹包含工作区文件“{0}”，是否打开？[了解更多]({1})有关工作区文件的详细信息。
workspacesFound = 此文件夹包含多个工作区文件，是否打开？[了解更多]({0})有关工作区文件的详细信息。

[vs/workbench/contrib/timeline/browser/timeline.contribution]
timeline.excludeSources = 要忽略的时间线数据来源。（实验性功能）
timeline.refreshView = 刷新
timeline.showView = 在“资源”面板中显示时间线视图。（实验性功能）
timelineConfigurationTitle = 时间线

[vs/workbench/contrib/timeline/browser/timelinePane]
timeline = 时间线
timeline.editorCannotProvideTimeline = 活动编辑器中没有时间线信息。
timeline.loadMore = 加载更多
timeline.loading = 正在加载 ${0} 的时间线…
timeline.noTimelineInfo = 无时间线信息。
