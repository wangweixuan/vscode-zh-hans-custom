[vs/workbench/contrib/feedback/browser/feedback]
character left = 剩余字符
characters left = 剩余字符
close = 关闭
feedbackTextInput = 告诉我们您的反馈意见
frownCaption = 负面反馈情绪
label.sendASmile = 通过 Tweet 向我们发送反馈。
other ways to contact us = 联系我们的其他方式
patchedVersion1 = 安装已损坏。
patchedVersion2 = 如果提交了 bug，请指定此项。
request a missing feature = 请求缺失功能
sendFeedback = Tweet 反馈
sentiment = 您的体验如何？
showFeedback = 在状态栏中显示反馈笑脸图标
smileCaption = 正面反馈情绪
submit a bug = 提交 bug
tell us why = 告诉我们原因？
tweet = Tweet
tweetFeedback = Tweet 反馈

[vs/workbench/contrib/feedback/browser/feedbackStatusbarItem]
status.feedback = Tweet 反馈

[vs/workbench/contrib/issue/electron-browser/issue.contribution]
developer = 开发者
help = 帮助
reportIssueInEnglish = 报告问题

[vs/workbench/contrib/issue/electron-browser/issueActions]
openProcessExplorer = 打开进程管理器
reportPerformanceIssue = 报告性能问题

[vs/workbench/contrib/logs/common/logs.contribution]
developer = 开发者
mainLog = 主进程
rendererLog = 窗口
sharedLog = 共享进程
telemetryLog = 遥测
userDataSyncLog = 配置同步

[vs/workbench/contrib/logs/common/logsActions]
critical = 严重
current = 当前
debug = 调试
default = 默认值
default and current = 默认、当前
err = 错误
info = 信息
log placeholder = 选择日志文件
off = 关
openSessionLogFile = 打开当前日志文件…
selectLogLevel = 选择日志级别
sessions placeholder = 选择会话
setLogLevel = 设置日志级别…
trace = 跟踪
warn = 警告

[vs/workbench/contrib/logs/electron-browser/logs.contribution]
developer = 开发者

[vs/workbench/contrib/logs/electron-browser/logsActions]
openLogsFolder = 打开日志文件夹…

[vs/workbench/contrib/performance/electron-browser/performance.contribution]
show.cat = 开发者
show.label = 启动性能

[vs/workbench/contrib/performance/electron-browser/perfviewEditor]
name = 启动性能

[vs/workbench/contrib/performance/electron-browser/startupProfiler]
prof.detail = 请创建问题并手动附加以下文件：\n{0}
prof.detail.restart = 需要重新启动才能继续使用“{0}”。再次感谢您的贡献。
prof.message = 成功创建的配置文件。
prof.restart = 重新启动
prof.restartAndFileIssue = 创建问题并重新启动
prof.thanks = 感谢您的帮助。

[vs/workbench/contrib/quickopen/browser/commandsHandler]
actionNotEnabled = 在当前上下文中没有启用命令“{0}”。
canNotRun = 命令“{0}”导致了一个错误。
cat.title = {0}：{1}
clearCommandHistory = 清除命令历史记录
entryAriaLabel = {0}，命令
entryAriaLabelWithKey = {0}、{1} ，命令
morecCommands = 其他命令
noCommandsMatching = 没有匹配的命令
recentlyUsed = 最近使用
showCommands.label = 命令栏…
showTriggerActions = 显示所有命令

[vs/workbench/contrib/quickopen/browser/gotoLineHandler]
cannotRunGotoLine = 首先打开文本文件以转到一行。
gotoLine = 转到行…
gotoLineColumnLabel = 转到行 {0} 和字符 {1}。
gotoLineLabel = 转到行 {0}。
gotoLineLabelEmpty = 当前行：{0}。请键入要导航到的行号。
gotoLineLabelEmptyWithLimit = 当前行：{0}。请键入一个要导航到的行号（介于 1 至 {1} 之间）

[vs/workbench/contrib/quickopen/browser/gotoSymbolHandler]
_constructor = 构造函数（{0}）
array = 数组（{0}）
boolean = 布尔值（{0}）
cannotRunGotoSymbol = 首先打开文本文件以转到符号
cannotRunGotoSymbolInFile = 没有该文件的任何符号信息
class = 类（{0}）
constant = 常量（{0}）
entryAriaLabel = {0}，符号
enum = 枚举（{0}）
enumMember = 枚举成员（{0}）
event = 事件（{0}）
field = 字段（{0}）
file = 文件（{0}）
function = 函数（{0}）
gotoSymbol = 转到文件中的符号…
gotoSymbolHandlerAriaLabel = 键入以减少当前活动编辑器的符号
interface = 接口（{0}）
key = 键（{0}）
method = 方法（{0}）
modules = 模块（{0}）
namespace = 命名空间（{0}）
noSymbolsFound = 找不到符号
noSymbolsMatching = 没有匹配的符号
number = 编号（{0}）
object = 对象（{0}）
operator = 运算符（{0}）
package = 包（{0}）
property = 属性（{0}）
string = 字符串（{0}）
struct = 结构（{0}）
symbols = 符号（{0}）
typeParameter = 类型参数（{0}）
variable = 变量（{0}）

[vs/workbench/contrib/quickopen/browser/helpHandler]
editorCommands = 编辑器命令
entryAriaLabel = {0}，选取器帮助
globalCommands = 全局命令

[vs/workbench/contrib/quickopen/browser/quickopen.contribution]
commandPalette = 命令栏…
commandsHandlerDescriptionDefault = 显示并运行命令
gotoLineDescriptionMac = 转到行
gotoLineDescriptionWin = 转到行
gotoSymbolDescription = 转到文件中的符号
gotoSymbolDescriptionScoped = 按类别转到文件中的符号
helpDescription = 显示帮助
miCommandPalette = 命令栏(&&C)…
miGotoLine = 转到行和列(&&L)…
miGotoSymbolInFile = 转到文件中的符号(&&S)…
miOpenView = 打开视图(&&O)…
view = 视图
viewPickerDescription = 打开视图

[vs/workbench/contrib/quickopen/browser/viewPickerHandler]
channels = 输出
entryAriaLabel = {0}，选择视图
logChannel = 日志（{0}）
openView = 打开视图
panels = 底边栏
quickOpenView = “快速打开”视图
terminalTitle = {0}：{1}
terminals = 终端
views = 侧边栏

[vs/workbench/contrib/surveys/browser/languageSurveys.contribution]
helpUs = 帮助我们改善对 {0} 的支持
neverAgain = 不再显示
remindLater = 稍后提醒
takeShortSurvey = 参与小调查

[vs/workbench/contrib/surveys/browser/nps.contribution]
neverAgain = 不再显示
remindLater = 稍后提醒
surveyQuestion = 是否要参加简短的反馈调查？
takeSurvey = 参加调查

[vs/workbench/contrib/update/browser/releaseNotesEditor]
releaseNotesInputName = 发行说明：{0}
unassigned = 未分配

[vs/workbench/contrib/update/browser/update]
DownloadingUpdate = 正在下载更新…
checkForUpdates = 检查更新…
checkingForUpdates = 正在检查更新…
download update = 下载更新
installUpdate = 安装更新
installUpdate... = 安装更新…
installingUpdate = 正在安装更新…
later = 稍后
licenseChanged = 我们对许可条款进行了修改，请点击[此处]({0})进行查看。
noUpdatesAvailable = 当前没有可用的更新。
ok = 确定
read the release notes = 欢迎使用 {0} {1} 版本！是否阅读发布说明？
releaseNotes = 发行说明
restartToUpdate = 重新启动以更新
showReleaseNotes = 显示发行说明
thereIsUpdateAvailable = 有可用的更新。
update service = 更新服务
updateAvailable = 有更新可用：{0} {1}
updateAvailableAfterRestart = 重新启动 {0} 即可应用最新更新。
updateInstalling = 正在后台安装 {0} {1}，我们将在完成后通知您。
updateIsReady = 有新的 {0} 的更新可用。
updateNow = 现在更新

[vs/workbench/contrib/update/browser/update.contribution]
miReleaseNotes = 发行说明(&&R)

[vs/workbench/contrib/watermark/browser/watermark]
tips.enabled = 在没有打开编辑器时显示水印提示。
watermark.findInFiles = 跨文件查找
watermark.newUntitledFile = 新建无标题文件
watermark.openFile = 打开文件
watermark.openFileFolder = 打开文件或文件夹
watermark.openFolder = 打开文件夹
watermark.openRecent = 打开最近的文件
watermark.quickOpen = 转到文件
watermark.showCommands = 显示所有命令
watermark.startDebugging = 开始调试
watermark.toggleTerminal = 切换终端

[vs/workbench/contrib/welcome/overlay/browser/welcomeOverlay]
help = 帮助
hideWelcomeOverlay = 隐藏界面概述
welcomeOverlay = 用户界面概览
welcomeOverlay.commandPalette = 查找并运行所有命令
welcomeOverlay.debug = 启动和调试
welcomeOverlay.explorer = 资源与文件
welcomeOverlay.extensions = 管理扩展
welcomeOverlay.git = 源代码管理
welcomeOverlay.notifications = 显示通知
welcomeOverlay.problems = 查看错误和警告
welcomeOverlay.search = 跨文件搜索
welcomeOverlay.terminal = 切换集成终端

[vs/workbench/contrib/welcome/page/browser/vs_code_welcome_page]
welcomePage.addWorkspaceFolder = 添加工作区文件夹…
welcomePage.colorTheme = 颜色主题
welcomePage.colorThemeDescription = 使 VS Code 呈现您喜欢的外观
welcomePage.customize = 自定义
welcomePage.editingEvolved = 编辑更上一层楼
welcomePage.gitHubRepository = GitHub 存储库
welcomePage.help = 帮助
welcomePage.installExtensionPacks = 工具和语言
welcomePage.installExtensionPacksDescription = 安装 {0} 和{1}的支持
welcomePage.installKeymapDescription = 设置和键盘映射
welcomePage.installKeymapExtension = 安装 {0} 或{1}的设置和键盘映射
welcomePage.interactivePlayground = 演示与实践
welcomePage.interactivePlaygroundDescription = 通过可交互的演示页面了解 VS Code 的基本功能
welcomePage.interfaceOverview = 界面概览
welcomePage.interfaceOverviewDescription = 查看突出显示用户界面组件的叠加图
welcomePage.introductoryVideos = 介绍视频
welcomePage.keybindingsCheatsheet = 快捷键速查表
welcomePage.learn = 学习
welcomePage.moreExtensions = 更多
welcomePage.moreRecent = 更多…
welcomePage.newFile = 新建文件
welcomePage.newsletterSignup = 订阅资讯邮件
welcomePage.noRecentFolders = 无最近使用文件夹
welcomePage.openFolder = 打开文件夹…
welcomePage.others = 其他
welcomePage.productDocumentation = 产品文档
welcomePage.recent = 最近
welcomePage.showCommands = 查找和运行命令
welcomePage.showCommandsDescription = 使用命令栏快速查找和运行命令（{0}）
welcomePage.showKeymapExtensions = 显示其他键盘映射扩展
welcomePage.showLanguageExtensions = 显示更多语言扩展
welcomePage.showOnStartup = 启动时显示欢迎页
welcomePage.stackOverflow = Stack Overflow
welcomePage.start = 开始
welcomePage.tipsAndTricks = 提示与技巧
welcomePage.vscode = Visual Studio Code

[vs/workbench/contrib/welcome/page/browser/welcomePage]
details = 详情
ok = 确定
welcome.title = 欢迎使用
welcomePage = 欢迎使用
welcomePage.atom = Atom
welcomePage.azure = Azure
welcomePage.background = 欢迎页面的背景色。
welcomePage.buttonBackground = 欢迎页按钮的背景色。
welcomePage.buttonHoverBackground = 欢迎页按钮被悬停时的背景色。
welcomePage.docker = Docker
welcomePage.extensionListSeparator = ，
welcomePage.extensionPackAlreadyInstalled = 已安装对 {0} 的支持。
welcomePage.extensionPackNotFound = 找不到对 {0}（ID：{1}）的支持。
welcomePage.installExtensionPack = 安装对 {0} 的额外支持
welcomePage.installKeymap = 安装 {0} 键盘映射
welcomePage.installedExtensionPack = 已安装 {0} 支持
welcomePage.installedKeymap = 已安装 {0} 键盘映射
welcomePage.installingExtensionPack = 正在安装对 {0} 的额外支持…
welcomePage.installingKeymap = 正在安装 {0} 键盘映射…
welcomePage.javaScript = JavaScript
welcomePage.keymapAlreadyInstalled = 已安装 {0} 键盘映射。
welcomePage.keymapNotFound = 找不到标识符为 {1} 的 {0} 键盘映射。
welcomePage.openFolderWithPath = 打开路径为 {1} 的文件夹 {0}
welcomePage.php = PHP
welcomePage.python = Python
welcomePage.showAzureExtensions = 显示 Azure 扩展
welcomePage.sublime = Sublime
welcomePage.vim = Vim
welcomePage.willReloadAfterInstallingExtensionPack = 安装对 {0} 的额外支持后，将重载窗口。
welcomePage.willReloadAfterInstallingKeymap = 安装 {0} 键盘映射后，将重载窗口。

[vs/workbench/contrib/welcome/page/browser/welcomePage.contribution]
help = 帮助
miWelcome = 欢迎使用(&&W)
workbench.startupEditor = 启动时显示的编辑器（适用于不能恢复上次打开的窗口时）。
workbench.startupEditor.newUntitledFile = 显示新建无标题文件（仅在打开空工作区时适用）。
workbench.startupEditor.none = 不显示编辑器。
workbench.startupEditor.readme = 打开包含一个 README 文件的文件夹时，显示该文件，否则显示欢迎页面。
workbench.startupEditor.welcomePage = 显示欢迎页面。
workbench.startupEditor.welcomePageInEmptyWorkbench = 显示欢迎页面（仅在打开空工作区时适用）。

[vs/workbench/contrib/welcome/telemetryOptOut/browser/telemetryOptOut]
telemetryOptOut.OptIn = 好
telemetryOptOut.OptOut = 不
telemetryOptOut.optInNotice = 允许微软收集使用数据来帮助改进 Visual Studio Code。请阅读我们的[隐私声明]({0})并了解如何[开启]({1})。
telemetryOptOut.optOutNotice = 允许微软收集使用数据来帮助改进 Visual Studio Code。请阅读我们的[隐私声明]({0})并了解如何[关闭]({1})。
telemetryOptOut.optOutOption = 允许微软收集使用数据来帮助改进 Visual Studio Code。请阅读我们的[隐私声明]({0})。
telemetryOptOut.readMore = 了解详细信息

[vs/workbench/contrib/welcome/walkThrough/browser/editor/editorWalkThrough]
editorWalkThrough = 演示与实践
editorWalkThrough.title = 演示与实践

[vs/workbench/contrib/welcome/walkThrough/browser/walkThrough.contribution]
help = 帮助
miInteractivePlayground = 演示与实践(&&N)
walkThrough.editor.label = 演示与实践

[vs/workbench/contrib/welcome/walkThrough/browser/walkThroughPart]
walkThrough.embeddedEditorBackground = 嵌入于演示与实践中的编辑器的背景色。
walkThrough.gitNotFound = 找不到 Git 程序。
walkThrough.unboundCommand = 未绑定
